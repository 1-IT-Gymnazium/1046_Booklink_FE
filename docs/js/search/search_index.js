var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.17,1,0.866]],["body/components/AppComponent.html",[0,0.276,1,1.494,2,1.35,3,0.302,4,0.262,5,1.098,6,2.104,7,1.098,8,1.098,9,0.262,10,2.987,11,1.098,12,2.035,13,1.997,14,1.456,15,1.456,16,1.35,17,1.35,18,1.633,19,5.291,20,1.494,21,2.788,22,5.291,23,1.829,24,4.717,25,0.296,26,0.512,27,1.761,28,0.262,29,0.03,30,0.526,31,0.874,32,0.874,33,3.959,34,0.874,35,3.559,36,0.543,37,1.018,38,0.302,39,1.018,40,1.456,41,2.61,42,3.559,43,0.302,44,0.343,45,3.559,46,3.686,47,3.462,48,3.959,49,2.329,50,3.086,51,2.987,52,2.61,53,3.559,54,3.462,55,5.291,56,2.61,57,3.559,58,5.633,59,2.329,60,3.559,61,3.559,62,2.329,63,2.987,64,2.104,65,2.329,66,2.61,67,3.559,68,2.104,69,3.559,70,3.559,71,3.459,72,2.788,73,3.88,74,3.559,75,3.559,76,2.61,77,2.61,78,2.61,79,1.018,80,1.456,81,1.456,82,1.098,83,1.739,84,1.098,85,0.512,86,1.098,87,0.874,88,1.633,89,1.098,90,0.874,91,1.098,92,0.944,93,1.098,94,1.098,95,0.874,96,1.018,97,1.456,98,0.874,99,1.098,100,0.874,101,1.098,102,0.874,103,1.098,104,1.098,105,0.874,106,1.098,107,0.874,108,1.098,109,0.874,110,0.745,111,0.874,112,0.577,113,1.098,114,0.874,115,1.018,116,0.745,117,1.098,118,1.098,119,0.021,120,0.021]],["title/modules/AppRoutingModule.html",[121,2.742,122,2.396]],["body/modules/AppRoutingModule.html",[0,0.335,3,0.33,4,0.286,9,0.286,17,1.114,29,0.03,36,0.635,38,0.33,39,1.114,43,0.424,44,0.375,90,1.228,92,1.326,95,1.228,96,1.431,100,1.228,102,1.228,107,1.228,109,1.228,110,1.048,111,1.228,112,0.632,114,1.228,115,1.114,116,0.816,119,0.022,120,0.022,122,3.668,123,2.855,124,3.894,125,1.984,126,4.198,127,5.526,128,3.894,129,5.002,130,3.894,131,3.894,132,2.855,133,3.894,134,3.816,135,3.894,136,3.894,137,3.894,138,1.705,139,1.768,140,2.855,141,3.894,142,2.855,143,5.002,144,2.855,145,1.398,146,4.203,147,2.694,148,1.922,149,2.855,150,3.894,151,3.268,152,4.638,153,3.273,154,2.855,155,2.272,156,3.894,157,3.268,158,0.69,159,0.69,160,3.894,161,2.855,162,3.894]],["title/guards/AuthGuard.html",[134,2.138,163,2.396]],["body/guards/AuthGuard.html",[3,0.4,4,0.347,9,0.347,14,1.455,25,0.295,29,0.03,34,1.383,36,0.543,38,0.4,39,1.349,43,0.4,44,0.455,116,0.988,119,0.025,120,0.025,134,3.685,145,1.693,152,5.431,164,4.715,165,3.957,166,1.738,167,2.005,168,4.715,169,4.715,170,1.455,171,1.383,172,1.493,173,1.569,174,3.957,175,6.023,176,3.085,177,4.131,178,4.715,179,1.07]],["title/injectables/AuthService.html",[138,1.008,172,0.866]],["body/injectables/AuthService.html",[3,0.249,4,0.216,9,0.216,14,0.907,25,0.184,26,0.449,28,0.403,29,0.03,30,0.947,31,1.276,32,1.276,34,1.539,36,0.548,38,0.249,39,0.841,43,0.406,44,0.283,85,0.564,110,0.867,112,0.476,116,1.089,119,0.018,120,0.018,125,2.097,138,1.277,145,1.486,147,1.582,148,2.042,155,2.708,158,0.52,159,1.089,166,1.277,167,0.978,170,1.802,171,1.016,172,1.097,173,0.978,176,2.707,179,1.353,180,2.154,181,1.922,182,1.478,183,3.512,184,3.073,185,3.512,186,3.812,187,3.812,188,3.401,189,3.401,190,4.137,191,3.472,192,2.465,193,1.604,194,4.137,195,1.73,196,1.73,197,1.277,198,2.938,199,2.582,200,2.938,201,2.938,202,3.034,203,2.938,204,2.264,205,1.968,206,2.938,207,1.277,208,3.034,209,3.073,210,2.938,211,3.133,212,3.034,213,3.073,214,2.938,215,2.831,216,3.034,217,2.938,218,2.015,219,3.512,220,2.938,221,3.034,222,3.512,223,3.034,224,2.938,225,0.907,226,2.154,227,0.978,228,2.154,229,2.154,230,2.154,231,1.922,232,2.707,233,0.978,234,2.154,235,0.555,236,1.922,237,2.154,238,3.034,239,2.154,240,1.922,241,3.812,242,2.154,243,1.922,244,2.154,245,2.154,246,2.154,247,2.154,248,3.034,249,2.154,250,2.154,251,3.034,252,2.154,253,2.154,254,1.45,255,2.154,256,2.154,257,2.154,258,2.154,259,1.734,260,2.154,261,2.154,262,2.154,263,2.154,264,2.154,265,2.154,266,2.154,267,2.154,268,1.737,269,1.139,270,2.154,271,2.154,272,2.154,273,2.154,274,2.154]],["title/interfaces/Book.html",[235,0.438,275,1.008]],["body/interfaces/Book.html",[3,0.234,4,0.203,9,0.203,14,0.853,25,0.173,26,0.43,27,1.782,28,0.46,29,0.03,30,1.012,36,0.446,38,0.234,43,0.497,44,0.266,85,0.623,119,0.017,120,0.017,158,0.49,159,0.49,171,1.242,172,1.05,173,0.92,179,1.474,182,0.853,193,1.223,197,0.853,205,2.332,225,0.853,227,0.92,233,0.92,235,0.77,275,1.719,276,1.159,277,1.159,278,2.244,279,2.244,280,2.244,281,2.244,282,2.405,283,2.542,284,2.244,285,2.244,286,2.244,287,2.335,288,2.244,289,2.276,290,2.487,291,1.782,292,1.782,293,1.782,294,1.799,295,1.799,296,1.536,297,1.536,298,1.255,299,1.795,300,0.92,301,1.255,302,2.103,303,1.255,304,1.255,305,1.255,306,1.255,307,1.255,308,1.255,309,1.255,310,1.255,311,1.255,312,1.255,313,1.255,314,1.255,315,1.255,316,1.255,317,1.255,318,1.255,319,1.255,320,1.255,321,1.255,322,1.255,323,1.255,324,1.255,325,1.255,326,1.255,327,1.255,328,1.255,329,1.799,330,1.255,331,1.255,332,1.255,333,1.255,334,1.255,335,1.255,336,1.255,337,1.255,338,1.255,339,1.255,340,1.255,341,1.255,342,1.255,343,1.255,344,1.255,345,1.255,346,1.255]],["title/interfaces/Bookshelf.html",[235,0.438,293,1.087]],["body/interfaces/Bookshelf.html",[3,0.248,4,0.215,9,0.215,14,0.901,25,0.183,26,0.447,27,1.371,28,0.417,29,0.03,30,1.01,36,0.46,38,0.248,43,0.505,44,0.282,85,0.666,119,0.018,120,0.018,158,0.517,159,0.517,171,1.011,172,1.092,173,0.972,179,1.484,182,0.901,193,1.272,197,0.901,205,2.347,225,0.901,227,0.972,233,0.972,235,0.783,275,1.687,276,1.224,277,1.224,278,1.727,279,1.727,280,1.727,281,1.727,282,2.173,283,2.572,284,1.727,285,1.727,286,1.727,287,2.378,288,1.727,289,2.308,290,2.505,291,1.82,292,1.82,293,1.888,294,2.483,295,2.483,296,1.597,297,1.597,298,1.327,299,1.851,300,0.972,301,1.327,302,2.168,303,1.327,304,1.327,305,1.327,306,1.327,307,1.327,308,1.327,309,1.327,310,1.327,311,1.327,312,1.327,313,1.327,314,1.327,315,1.327,316,1.327,317,1.327,318,1.327,319,1.327,320,1.327,321,1.327,322,1.327,323,1.327,324,1.327,325,1.327,326,1.327,327,1.327,328,1.327,329,1.871,330,1.327,331,1.327,332,1.327,333,1.327,334,1.327,335,1.327,336,1.327,337,1.327,338,1.327,339,1.327,340,1.327,341,1.327,342,1.327,343,1.327,344,1.327,345,1.327,346,1.327]],["title/components/ButtonComponent.html",[0,0.17,87,0.802]],["body/components/ButtonComponent.html",[0,0.248,1,0.769,2,1.173,3,0.246,4,0.213,5,1.265,6,1.715,7,0.895,8,0.895,9,0.213,11,0.895,12,1.983,13,1.891,15,1.265,16,1.173,17,1.173,18,1.468,20,0.769,21,2.424,25,0.182,28,0.401,29,0.03,30,0.764,31,1.167,32,1.167,34,1.39,36,0.395,37,0.83,38,0.246,40,0.895,43,0.246,44,0.28,47,1.898,50,1.898,62,3.382,63,2.434,64,2.424,65,1.898,68,2.811,72,1.715,79,0.83,80,1.265,81,1.265,82,0.895,83,1.595,84,0.895,85,0.445,86,0.895,87,1.269,88,1.972,89,0.895,90,0.712,91,0.895,92,0.769,93,0.895,94,0.895,95,0.712,96,0.83,97,1.265,98,0.712,99,0.895,100,0.712,101,0.895,102,0.712,103,0.895,104,0.895,105,0.712,106,0.895,107,0.712,108,0.895,109,0.712,110,0.608,111,0.712,112,0.47,113,0.895,114,0.712,115,0.83,116,0.608,117,0.895,118,0.895,119,0.018,120,0.018,145,1.041,171,0.712,179,0.658,196,1.365,218,1.125,243,2.683,254,2.024,269,1.59,347,2.434,348,4.242,349,4.756,350,4.751,351,3.441,352,3.991,353,3.999,354,3.347,355,3.441,356,3.991,357,3.441,358,4.756,359,2.9,360,3.347,361,2.9,362,4.1,363,2.024,364,2.9,365,4.1,366,4.1,367,3.488,368,5.453,369,3.999,370,2.9,371,3.991,372,2.9,373,3.441,374,4.1,375,2.9,376,2.9,377,4.577,378,3.441,379,2.9,380,2.9,381,4.1,382,2.9,383,3.007,384,2.9,385,2.127,386,2.127,387,2.434,388,2.434,389,2.347,390,2.434,391,2.9,392,3.568,393,1.898,394,1.898,395,2.127,396,1.898,397,1.715,398,1.898,399,2.127,400,2.683,401,2.683,402,2.127,403,1.898,404,1.898,405,2.9,406,2.9,407,2.9,408,2.434,409,2.9,410,4.756,411,2.9,412,2.9,413,2.127,414,4.1,415,3.441,416,2.434,417,2.127,418,2.127]],["title/components/DashboardComponent.html",[0,0.17,90,0.802]],["body/components/DashboardComponent.html",[0,0.165,1,0.401,2,0.711,3,0.128,4,0.111,5,0.466,7,0.466,8,0.466,9,0.111,11,0.466,12,1.759,13,1.657,15,0.767,16,0.906,17,0.711,18,0.977,20,0.401,23,0.964,25,0.329,26,0.27,27,1.349,28,0.435,29,0.03,30,0.794,31,1.363,32,1.363,34,1.531,36,0.42,37,0.432,38,0.128,39,0.432,40,0.466,43,0.128,44,0.146,79,0.432,80,0.767,81,0.767,82,0.466,83,1.132,84,0.466,85,0.522,86,0.466,87,0.371,88,0.977,89,0.466,90,0.9,91,0.466,92,0.401,93,0.466,94,0.466,95,0.371,96,0.432,97,0.767,98,0.371,99,0.466,100,0.371,101,0.466,102,0.371,103,0.466,104,0.466,105,0.371,106,0.466,107,0.371,108,0.466,109,0.371,110,0.317,111,0.371,112,0.245,113,0.466,114,0.371,115,0.432,116,0.317,117,0.466,118,0.466,119,0.011,120,0.011,125,1.654,126,2.657,138,1.421,139,0.686,145,1.654,151,2.086,153,1.626,159,0.561,166,0.767,167,0.827,170,1.714,171,1.07,179,1.045,195,1.451,196,1.451,199,2.643,207,1.875,215,2.168,218,1.69,259,1.042,275,1.902,278,1.699,279,1.327,280,1.327,281,1.699,282,1.327,283,0.634,284,1.699,285,1.327,286,1.327,287,1.327,288,1.327,289,1.69,290,1.932,291,1.601,292,1.601,293,1.82,300,1.221,357,2.086,363,2.375,373,2.086,389,2.741,397,2.723,419,1.268,420,1.562,421,2.485,422,1.129,423,2.485,424,3.378,425,3.166,426,3.166,427,3.166,428,3.166,429,3.166,430,3.166,431,3.166,432,3.166,433,3.166,434,3.166,435,3.166,436,3.166,437,3.166,438,3.667,439,2.485,440,2.485,441,3.667,442,2.168,443,3.667,444,3.667,445,3.667,446,3.667,447,3.667,448,3.667,449,2.485,450,2.485,451,2.485,452,3.166,453,1.268,454,2.485,455,2.086,456,1.511,457,2.485,458,1.511,459,2.485,460,3.667,461,2.485,462,2.485,463,2.485,464,1.511,465,1.511,466,1.511,467,1.511,468,2.485,469,2.485,470,2.485,471,2.086,472,3.657,473,1.511,474,1.511,475,1.511,476,1.511,477,1.511,478,2.485,479,2.485,480,2.485,481,2.485,482,1.511,483,2.485,484,1.511,485,2.485,486,2.485,487,2.485,488,2.485,489,1.511,490,1.511,491,1.511,492,1.511,493,1.511,494,1.511,495,1.511,496,1.511,497,1.511,498,1.511,499,1.511,500,1.511,501,1.511,502,1.511,503,1.511,504,1.511,505,1.268,506,1.268,507,0.686,508,2.485,509,1.268,510,1.511,511,1.511,512,2.485,513,2.485,514,2.485,515,1.511,516,1.511,517,1.511,518,1.511,519,1.511,520,1.511,521,1.511,522,1.511,523,1.511,524,2.485,525,1.511,526,1.511,527,2.485,528,3.166,529,4.053,530,1.511,531,1.511,532,1.511,533,1.511,534,1.511,535,1.511,536,1.511,537,2.485,538,1.511,539,1.511,540,4.606,541,1.511,542,1.511,543,1.511,544,1.511,545,1.511,546,1.511,547,1.511,548,1.511,549,1.511,550,1.511,551,1.511,552,1.511,553,1.511,554,1.511,555,1.511,556,4.053,557,4.358,558,4.358,559,3.166,560,2.485,561,2.485,562,1.511,563,2.086,564,1.469,565,2.485,566,2.485,567,2.485,568,2.485,569,2.485,570,2.485,571,3.667,572,3.667,573,2.485,574,3.078,575,2.086,576,4.358,577,2.485,578,2.485,579,2.485,580,2.485,581,2.485,582,2.485,583,2.485,584,2.485,585,2.485,586,3.657,587,3.657,588,2.485,589,2.485,590,2.485,591,4.811,592,2.485,593,2.086,594,2.485,595,2.485,596,2.485,597,3.667,598,2.086,599,2.485,600,2.485,601,2.485]],["title/injectables/DatabaseService.html",[172,0.866,300,1.087]],["body/injectables/DatabaseService.html",[3,0.177,4,0.153,9,0.153,14,0.644,25,0.131,26,0.349,27,1.069,28,0.471,29,0.03,30,1.006,31,0.512,32,0.512,34,1.551,36,0.378,38,0.177,43,0.458,44,0.201,85,0.7,119,0.014,120,0.014,158,0.37,159,0.694,166,0.992,167,0.694,170,1.931,171,0.789,172,0.852,173,0.694,179,1.42,180,1.53,182,1.21,192,1.75,193,1.359,195,2.093,196,2.093,197,0.992,205,2.368,225,0.644,227,0.694,235,0.702,275,1.668,276,2.659,277,0.874,278,1.347,279,1.643,280,1.347,281,1.347,282,1.993,283,2.555,284,1.347,285,1.347,286,1.347,287,1.846,288,1.347,289,2.095,290,2.233,291,1.798,292,1.798,293,1.798,294,1.459,295,1.459,296,1.707,297,1.707,298,0.947,299,2.029,300,1.069,301,1.459,302,1.78,303,1.459,304,0.947,305,1.459,306,0.947,307,1.459,308,0.947,309,1.459,310,0.947,311,1.459,312,0.947,313,1.459,314,0.947,315,1.459,316,0.947,317,1.459,318,0.947,319,1.459,320,0.947,321,0.947,322,1.459,323,0.947,324,1.459,325,0.947,326,1.459,327,0.947,328,1.459,329,2.281,330,0.947,331,1.459,332,0.947,333,1.459,334,0.947,335,1.459,336,0.947,337,0.947,338,0.947,339,1.459,340,0.947,341,1.459,342,0.947,343,1.459,344,0.947,345,1.459,346,0.947,602,3.213,603,3.213,604,3.213,605,3.213,606,3.213,607,3.213,608,3.213,609,3.213,610,3.213,611,3.213,612,3.213,613,3.213,614,3.213,615,3.213,616,3.213,617,3.213,618,3.213,619,3.213,620,3.213,621,3.213,622,3.213,623,2.086,624,2.086,625,4.403,626,2.086,627,2.086,628,2.086,629,2.086,630,2.086,631,2.086,632,2.086,633,2.086,634,2.086,635,2.086,636,2.086,637,2.086,638,2.086,639,2.086,640,2.086,641,2.086,642,2.086,643,2.086,644,2.086]],["title/components/ForgotPasswordComponent.html",[0,0.17,95,0.802]],["body/components/ForgotPasswordComponent.html",[0,0.265,1,0.87,2,1.278,3,0.278,4,0.241,5,1.013,7,1.013,8,1.013,9,0.241,11,1.013,12,2.015,13,1.972,15,1.378,16,1.453,17,1.278,18,1.567,20,0.87,23,1.732,25,0.206,26,0.485,28,0.373,29,0.03,30,0.806,31,1.246,32,1.246,34,1.4,36,0.525,37,0.939,38,0.278,40,1.013,43,0.278,44,0.316,79,0.939,80,1.378,81,1.378,82,1.013,83,1.682,84,1.013,85,0.551,86,1.013,87,0.805,88,1.567,89,1.013,90,0.805,91,1.013,92,0.87,93,1.013,94,1.013,95,1.338,96,1.722,97,1.378,98,0.805,99,1.013,100,0.805,101,1.013,102,0.805,103,1.013,104,1.013,105,0.805,106,1.013,107,0.805,108,1.013,109,0.805,110,1.261,111,0.805,112,0.532,113,1.013,114,0.805,115,0.939,116,0.687,117,1.013,118,1.013,119,0.02,120,0.02,138,1.816,139,1.49,142,4.314,155,2.672,158,0.581,166,1.378,167,1.092,170,1.013,177,3.276,195,1.092,196,1.092,204,2.435,207,1.378,211,3.322,240,2.922,259,1.375,363,2.204,420,2.506,422,2.029,507,1.49,645,4.937,646,2.406,647,3.748,648,3.748,649,4.786,650,5.078,651,5.451,652,2.406,653,3.748,654,3.281,655,3.281,656,3.281,657,3.281,658,2.406,659,2.754,660,2.147,661,3.281,662,3.276,663,3.281,664,1.94,665,3.998,666,3.276,667,4.466,668,4.466,669,4.466]],["title/interfaces/ForgotPasswordRequest.html",[209,1.931,235,0.438]],["body/interfaces/ForgotPasswordRequest.html",[3,0.299,4,0.259,9,0.259,14,1.088,25,0.221,26,0.508,28,0.259,29,0.03,30,0.941,36,0.579,38,0.299,39,1.008,43,0.446,44,0.34,110,0.982,112,0.572,116,1.175,119,0.021,120,0.021,125,1.89,138,1.088,145,1.683,147,1.898,155,2.728,158,0.624,159,0.994,171,0.865,172,1.243,173,1.173,176,3.066,179,1.413,181,2.306,182,1.088,183,2.584,184,2.77,185,2.584,186,2.584,187,2.584,188,2.306,189,2.306,193,1.446,197,1.088,199,2.549,202,2.584,204,2.444,205,1.89,207,1.088,208,2.584,209,3.112,211,3.066,212,2.584,213,2.77,215,2.77,216,2.584,218,1.817,219,3.437,221,2.584,222,3.437,223,2.584,225,1.088,226,2.584,227,1.173,228,2.584,229,2.584,230,2.584,231,2.306,232,3.066,233,1.56,234,2.584,235,0.629,236,2.306,237,2.584,238,3.437,239,2.584,240,2.306,241,4.115,242,2.584,243,2.306,244,2.584,245,2.584,246,2.584,247,2.584,248,3.437,249,2.584,250,2.584,251,3.437,252,2.584,253,2.584,254,1.739,255,2.584,256,2.584,257,2.584,258,2.584,259,1.964,260,2.584,261,2.584,262,2.584,263,2.584,264,2.584,265,2.584,266,2.584,267,2.584,268,2.083,269,1.366,270,2.584,271,2.584,272,2.584,273,2.584,274,2.584]],["title/components/HeaderComponent.html",[0,0.17,98,0.802]],["body/components/HeaderComponent.html",[0,0.26,1,0.841,2,1.248,3,0.269,4,0.233,5,1.346,6,1.874,7,0.978,8,0.978,9,0.233,11,0.978,12,2.007,13,1.926,15,1.346,16,1.248,17,1.248,18,1.539,20,0.841,21,2.579,25,0.199,28,0.414,29,0.03,31,0.778,32,0.778,34,1.319,36,0.518,37,0.907,38,0.269,40,0.978,43,0.269,44,0.306,46,3.263,47,2.854,49,2.074,50,3.263,54,2.854,59,2.074,64,1.874,65,2.074,66,2.325,68,1.874,71,2.325,72,2.948,73,2.325,76,2.325,77,2.325,78,2.325,79,0.907,80,1.346,81,1.346,82,0.978,83,1.658,84,0.978,85,0.473,86,0.978,87,1.319,88,1.926,89,0.978,90,0.778,91,0.978,92,0.841,93,0.978,94,0.978,95,0.778,96,0.907,97,1.346,98,1.319,99,0.978,100,0.778,101,0.978,102,0.778,103,0.978,104,0.978,105,0.778,106,0.978,107,0.778,108,0.978,109,0.778,110,0.664,111,0.778,112,0.986,113,0.978,114,0.778,115,0.907,116,0.664,117,0.978,118,0.978,119,0.019,120,0.019,199,2.44,218,1.934,348,2.854,351,3.661,354,2.579,355,3.661,360,1.874,371,5.006,377,3.661,378,4.509,385,3.199,386,3.199,389,2.462,392,3.515,393,2.074,394,2.074,395,2.325,396,2.074,397,1.874,398,2.074,399,2.325,400,2.854,401,2.854,402,2.325,403,2.074,404,2.074,408,2.66,413,2.325,417,2.325,563,4.509,670,2.66,671,5.964,672,4.987,673,4.987,674,4.987,675,4.186,676,4.186,677,4.186,678,3.17,679,3.17,680,3.17,681,3.17,682,3.17,683,3.658,684,2.66,685,2.66,686,3.17,687,3.17,688,2.66,689,3.661,690,3.17,691,4.362,692,2.325]],["title/components/HomeComponent.html",[0,0.17,100,0.802]],["body/components/HomeComponent.html",[0,0.255,1,0.81,2,1.217,3,0.259,4,0.225,5,0.943,7,0.943,8,0.943,9,0.225,11,0.943,12,1.997,13,1.949,15,1.312,16,1.217,17,1.217,18,1.509,20,0.81,23,1.649,25,0.191,26,0.461,28,0.225,29,0.03,31,0.75,32,0.75,34,1.201,36,0.51,37,0.874,38,0.259,39,0.874,40,0.943,43,0.259,44,0.295,56,3.118,79,0.874,80,1.312,81,1.312,82,0.943,83,1.632,84,0.943,85,0.531,86,0.943,87,0.75,88,1.509,89,0.943,90,0.75,91,0.943,92,0.81,93,0.943,94,0.943,95,0.75,96,0.874,97,1.312,98,0.75,99,0.943,100,1.298,101,0.943,102,0.75,103,0.943,104,0.943,105,0.75,106,0.943,107,0.75,108,0.943,109,0.75,110,0.64,111,0.75,112,0.495,113,0.943,114,0.75,115,0.874,116,0.64,117,0.943,118,0.943,119,0.019,120,0.019,125,2.067,138,1.822,139,1.388,147,2.848,158,0.541,159,0.541,161,2.24,166,1.312,167,1.017,170,0.943,195,1.017,196,1.017,207,1.312,275,1.776,291,1.76,292,1.415,293,1.76,363,2.099,422,1.931,424,4.221,472,3.569,564,3.56,693,2.564,694,4.252,695,4.252,696,5.559,697,5.288,698,2.564,699,4.252,700,3.055,701,3.055,702,2.24,703,5.288,704,4.252,705,4.252,706,4.252,707,4.252,708,5.288,709,5.288,710,3.46,711,4.252,712,4.252,713,4.252,714,4.252,715,3.569,716,4.252,717,4.252,718,4.252,719,4.252,720,5.288,721,3.569,722,4.252,723,4.252,724,4.252,725,4.252,726,4.252,727,4.252,728,4.252,729,4.252,730,4.252,731,4.252,732,4.252,733,4.252,734,4.252,735,4.252,736,4.252,737,4.252,738,3.118,739,4.252,740,4.252,741,4.252,742,4.252,743,4.252]],["title/interfaces/Household.html",[235,0.438,291,1.087]],["body/interfaces/Household.html",[3,0.254,4,0.22,9,0.22,14,0.924,25,0.188,26,0.455,27,1.395,28,0.356,29,0.03,30,1.011,36,0.466,38,0.254,43,0.508,44,0.289,85,0.669,119,0.018,120,0.018,158,0.53,159,0.53,171,1.029,172,1.112,173,0.996,179,1.488,182,0.924,193,1.294,197,0.924,205,2.353,225,0.924,227,0.996,233,0.996,235,0.788,275,1.703,276,1.255,277,1.255,278,1.757,279,1.757,280,1.757,281,1.757,282,2.197,283,2.586,284,1.757,285,1.757,286,1.757,287,2.028,288,1.757,289,2.323,290,2.417,291,1.903,292,1.837,293,1.837,294,1.904,295,1.904,296,1.625,297,1.625,298,1.36,299,1.876,300,0.996,301,1.36,302,2.197,303,1.36,304,1.36,305,1.36,306,1.36,307,1.36,308,1.36,309,1.36,310,1.36,311,1.36,312,1.36,313,1.36,314,1.36,315,1.36,316,1.36,317,1.36,318,1.36,319,1.36,320,1.36,321,1.36,322,1.36,323,1.36,324,1.36,325,1.36,326,1.36,327,1.36,328,1.36,329,1.904,330,1.36,331,1.36,332,1.36,333,1.36,334,1.36,335,1.36,336,1.36,337,1.36,338,1.36,339,1.36,340,1.36,341,1.36,342,1.36,343,1.36,344,1.36,345,1.36,346,1.36]],["title/components/LoginComponent.html",[0,0.17,102,0.802]],["body/components/LoginComponent.html",[0,0.264,1,0.863,2,1.271,3,0.276,4,0.239,5,1.005,7,1.005,8,1.005,9,0.239,11,1.005,12,2.013,13,1.969,15,1.371,16,1.271,17,1.271,18,1.561,20,0.863,23,1.722,25,0.204,26,0.482,28,0.399,29,0.03,30,0.748,31,1.241,32,1.241,34,1.396,36,0.548,37,0.932,38,0.276,39,0.932,40,1.005,43,0.276,44,0.314,79,0.932,80,1.371,81,1.371,82,1.005,83,1.677,84,1.005,85,0.549,86,1.005,87,0.799,88,1.561,89,1.005,90,0.799,91,1.005,92,0.863,93,1.005,94,1.005,95,0.799,96,1.447,97,1.371,98,0.799,99,1.005,100,0.799,101,1.005,102,1.334,103,1.005,104,1.005,105,0.799,106,1.005,107,0.799,108,1.005,109,0.799,110,0.682,111,0.799,112,0.528,113,1.005,114,0.799,115,0.932,116,0.682,117,1.005,118,1.005,119,0.02,120,0.02,125,2.157,138,1.811,139,1.479,148,2.897,153,2.13,155,2.728,158,0.577,159,0.577,166,1.371,167,1.084,170,1.005,195,1.084,196,1.084,204,2.205,207,1.005,259,1.365,268,1.925,269,1.262,420,2.496,422,2.018,507,1.479,564,2.626,652,2.388,660,2.13,662,3.258,664,1.925,665,3.258,744,2.732,745,3.709,746,3.709,747,4.443,748,4.443,749,5.057,750,3.256,751,3.256,752,3.256,753,3.256,754,3.256,755,3.256,756,3.256,757,3.729,758,3.256,759,2.388,760,3.256,761,3.256,762,3.256,763,3.256,764,3.256,765,2.732,766,3.256,767,3.256,768,2.732,769,2.732,770,4.304,771,4.56,772,3.256,773,3.729,774,3.258,775,3.256]],["title/components/NavBarComponent.html",[0,0.17,20,0.866]],["body/components/NavBarComponent.html",[0,0.227,1,0.657,2,1.047,3,0.21,4,0.182,5,0.764,6,1.464,7,0.764,8,0.764,9,0.182,11,0.764,12,1.937,13,1.825,15,1.129,16,1.047,17,1.047,18,1.342,20,1.273,21,2.162,23,1.418,25,0.155,26,0.397,27,1.599,28,0.353,29,0.03,30,0.758,31,0.898,32,0.898,34,1.427,36,0.494,37,0.709,38,0.21,39,0.709,40,1.909,41,4.337,43,0.21,44,0.239,46,1.62,49,1.62,52,1.816,54,1.62,59,1.62,62,2.845,64,2.571,65,1.62,66,1.816,68,2.571,71,1.816,72,3.17,73,3.933,76,1.816,77,1.816,78,1.816,79,0.709,80,1.129,81,1.129,82,0.764,83,1.482,84,0.764,85,0.521,86,0.764,87,0.608,88,1.342,89,0.764,90,0.608,91,0.764,92,0.657,93,0.764,94,0.764,95,0.608,96,0.709,97,1.129,98,0.608,99,0.764,100,0.608,101,0.764,102,0.608,103,0.764,104,0.764,105,0.608,106,0.764,107,0.608,108,0.764,109,0.608,110,0.519,111,0.608,112,0.831,113,0.764,114,0.608,115,0.709,116,0.519,117,0.764,118,0.764,119,0.016,120,0.016,125,1.992,138,1.655,139,1.125,146,2.393,147,1.97,148,1.805,149,2.682,153,2.393,154,2.682,158,0.439,159,0.439,161,1.816,166,1.129,167,0.824,170,1.655,171,1.179,179,0.562,184,3.029,188,3.142,189,3.142,195,1.217,196,1.217,199,2.181,204,0.96,207,1.825,348,1.62,354,1.464,360,3.366,363,2.37,387,2.078,388,2.078,389,1.222,392,3.142,393,2.393,394,1.62,396,1.62,398,1.62,400,1.62,401,1.62,403,1.62,404,1.62,418,2.682,420,2.146,442,2.839,507,1.125,564,2.162,598,4.031,652,1.816,666,2.682,683,3.758,684,4.3,685,4.3,692,1.816,745,3.189,746,3.189,770,2.682,776,4.963,777,2.078,778,4.349,779,4.349,780,3.658,781,4.349,782,4.803,783,3.07,784,4.803,785,3.658,786,2.477,787,2.477,788,2.477,789,3.07,790,2.477,791,2.477,792,2.477,793,2.477,794,2.477,795,2.078,796,2.477,797,4.803,798,2.078,799,2.078,800,3.658,801,3.07,802,3.658,803,2.393,804,2.477,805,2.477,806,5.123,807,3.07,808,2.477,809,2.477,810,4.349,811,4.349,812,4.349,813,3.658,814,2.477,815,4.349,816,2.477,817,4.803,818,2.477,819,2.477,820,2.477,821,3.658,822,2.477,823,2.477,824,2.477,825,2.477,826,2.477,827,2.477]],["title/components/PageComponent.html",[0,0.17,105,0.802]],["body/components/PageComponent.html",[0,0.327,1,0.608,2,1.419,3,0.194,4,0.168,5,1.066,6,1.355,7,0.707,8,0.707,9,0.168,11,0.707,12,1.913,13,1.864,15,1.066,16,0.988,17,0.988,18,1.282,20,0.608,21,2.041,25,0.144,26,0.375,28,0.254,29,0.03,31,0.563,32,0.563,34,1.135,36,0.446,37,0.656,38,0.194,40,0.707,43,0.194,44,0.221,46,3.796,47,2.259,49,2.259,50,1.5,52,3.636,54,3.244,59,1.5,62,1.5,64,1.355,68,2.455,72,2.455,79,0.656,80,1.066,81,1.066,82,0.707,83,1.427,84,0.707,85,0.502,86,0.707,87,0.563,88,2.02,89,0.707,90,0.563,91,0.707,92,0.608,93,0.707,94,0.707,95,0.563,96,0.656,97,1.066,98,1.135,99,0.707,100,0.563,101,0.707,102,0.563,103,0.707,104,0.707,105,1.135,106,0.707,107,0.563,108,0.707,109,0.563,110,0.48,111,0.563,112,0.903,113,0.707,114,0.563,115,0.656,116,0.48,117,0.707,118,0.707,119,0.015,120,0.015,146,1.5,166,1.066,170,1.282,199,2.252,207,1.282,215,3.53,254,2.05,269,2.47,354,2.733,360,2.455,385,3.046,386,3.046,389,2.447,390,1.924,392,3.538,393,2.259,394,2.259,395,3.39,396,3.244,397,1.355,398,1.5,399,1.681,400,2.259,401,2.259,402,1.681,403,1.5,404,1.5,413,1.681,415,3.879,416,1.924,417,1.681,418,1.681,683,3.046,688,2.898,689,3.486,692,2.532,710,2.718,774,3.046,803,2.718,807,1.924,828,1.924,829,4.153,830,5.694,831,4.153,832,4.153,833,4.153,834,5.211,835,4.153,836,4.153,837,4.153,838,4.153,839,4.153,840,5.211,841,4.153,842,4.153,843,3.486,844,4.153,845,4.153,846,4.153,847,4.153,848,3.486,849,4.153,850,4.153,851,4.153,852,4.153,853,4.153,854,4.153,855,4.153,856,4.153,857,4.153,858,3.486,859,4.153,860,3.486,861,4.153,862,5.211,863,4.153,864,4.153,865,4.153,866,3.486,867,4.153,868,4.153,869,4.153,870,5.408,871,4.153,872,3.486,873,4.153,874,4.153,875,4.153,876,4.622,877,4.622,878,4.622,879,2.292,880,2.292,881,2.292,882,2.292,883,2.292,884,4.153,885,2.898,886,2.898,887,2.292,888,2.292,889,2.292,890,2.292,891,4.153,892,2.292,893,2.292,894,4.153,895,2.292,896,2.292,897,2.292,898,2.292,899,2.292,900,2.292,901,2.292,902,4.153,903,3.452,904,2.292,905,2.292,906,2.292,907,2.292]],["title/components/RegisterComponent.html",[0,0.17,107,0.802]],["body/components/RegisterComponent.html",[0,0.253,1,0.799,2,1.205,3,0.255,4,0.222,5,0.93,7,0.93,8,0.93,9,0.222,11,0.93,12,1.993,13,1.944,15,1.3,16,1.205,17,1.205,18,1.499,20,0.799,23,1.633,25,0.189,26,0.457,28,0.421,29,0.03,30,0.923,31,1.291,32,1.291,34,1.444,36,0.533,37,0.863,38,0.255,39,0.863,40,0.93,43,0.255,44,0.291,79,0.863,80,1.3,81,1.3,82,0.93,83,1.623,84,0.93,85,0.571,86,0.93,87,0.74,88,1.499,89,0.93,90,0.74,91,0.93,92,0.799,93,0.93,94,0.93,95,0.74,96,0.863,97,1.3,98,0.74,99,0.93,100,0.74,101,0.93,102,0.74,103,0.93,104,0.93,105,0.74,106,0.93,107,1.291,108,0.93,109,0.74,110,0.632,111,0.74,112,0.489,113,0.93,114,0.74,115,0.863,116,0.632,117,0.93,118,0.93,119,0.019,120,0.019,125,2.058,145,1.083,146,2.757,148,1.488,149,4.203,155,2.726,158,0.534,159,0.534,166,1.3,167,1.003,170,1.3,179,0.684,182,1.499,193,1.623,195,1.402,196,1.402,197,1.499,204,2.222,207,1.499,218,1.633,225,0.93,259,1.766,268,1.782,269,1.169,420,2.397,422,1.913,507,1.369,564,2.491,658,2.211,664,2.491,665,3.09,698,2.53,702,2.211,745,3.562,746,3.562,757,3.536,759,3.09,768,2.53,769,2.53,770,3.856,771,4.413,773,3.536,774,3.09,783,3.536,789,3.536,798,2.53,799,2.53,908,2.53,909,4.856,910,4.213,911,4.213,912,4.076,913,4.213,914,3.015,915,3.015,916,4.213,917,3.015,918,3.015,919,3.015,920,4.213,921,2.53,922,2.53,923,2.53,924,2.53,925,2.53,926,3.015,927,3.015,928,4.213,929,3.015,930,4.213,931,3.536,932,4.213]],["title/components/ResetPasswordComponent.html",[0,0.17,109,0.802]],["body/components/ResetPasswordComponent.html",[0,0.249,1,0.772,2,1.176,3,0.247,4,0.214,5,0.898,7,0.898,8,0.898,9,0.214,11,0.898,12,1.984,13,1.932,15,1.268,16,1.481,17,1.176,18,1.47,20,0.772,23,1.593,25,0.182,26,0.446,28,0.401,29,0.03,30,0.88,31,1.34,32,1.34,34,1.46,36,0.526,37,0.833,38,0.247,39,0.833,40,0.898,43,0.247,44,0.281,79,0.833,80,1.268,81,1.268,82,0.898,83,1.598,84,0.898,85,0.517,86,0.898,87,0.714,88,1.47,89,0.898,90,0.714,91,0.898,92,0.772,93,0.898,94,0.898,95,0.714,96,0.833,97,1.268,98,0.714,99,0.898,100,0.714,101,0.898,102,0.714,103,0.898,104,0.898,105,0.714,106,0.898,107,0.714,108,0.898,109,1.271,110,1.311,111,0.714,112,0.472,113,0.898,114,0.714,115,0.833,116,1.144,117,0.898,118,0.898,119,0.018,120,0.018,125,2.092,138,1.798,139,1.322,144,4.436,148,2.029,155,2.866,158,0.516,159,0.728,166,1.268,167,0.969,170,1.268,179,0.661,191,4.345,195,0.969,196,0.969,204,2.007,207,1.598,218,2.007,236,3.387,259,1.22,269,1.593,363,2.029,420,2.352,422,1.867,442,3.06,507,1.322,646,2.135,647,3.449,648,3.449,653,2.443,658,3.014,659,2.443,660,1.904,662,2.135,664,1.721,759,3.014,912,3.999,921,2.443,922,2.443,923,2.443,931,3.449,933,5.077,934,4.765,935,2.443,936,4.345,937,4.11,938,3.449,939,2.91,940,2.91,941,2.91,942,2.91,943,2.91,944,2.91,945,4.11,946,2.91,947,4.11,948,2.91,949,4.11,950,2.91,951,2.443,952,2.91,953,2.443,954,4.11,955,4.11,956,4.11]],["title/interfaces/ResetPasswordRequest.html",[213,1.931,235,0.438]],["body/interfaces/ResetPasswordRequest.html",[3,0.293,4,0.254,9,0.254,14,1.067,25,0.217,26,0.502,28,0.383,29,0.03,30,0.964,36,0.576,38,0.293,39,0.989,43,0.442,44,0.333,110,0.969,112,0.561,116,1.278,119,0.02,120,0.02,125,1.872,138,1.067,145,1.661,147,1.862,155,2.713,158,0.612,159,0.987,171,0.848,172,1.227,173,1.15,176,3.027,179,1.407,181,2.262,182,1.067,183,2.535,184,2.735,185,2.535,186,2.535,187,2.535,188,2.262,189,2.262,193,1.428,197,1.067,199,2.529,202,2.535,204,2.434,205,1.872,207,1.067,208,2.535,209,2.735,211,3.027,212,2.535,213,3.082,215,2.735,216,2.535,218,1.793,219,3.393,221,2.535,222,3.393,223,2.535,225,1.067,226,2.535,227,1.15,228,2.535,229,2.535,230,2.535,231,2.262,232,3.027,233,1.54,234,2.535,235,0.621,236,3.643,237,2.535,238,3.393,239,2.535,240,2.262,241,4.083,242,2.535,243,2.262,244,2.535,245,2.535,246,2.535,247,2.535,248,3.393,249,2.535,250,2.535,251,3.393,252,2.535,253,2.535,254,1.706,255,2.535,256,2.535,257,2.535,258,2.535,259,1.939,260,2.535,261,2.535,262,2.535,263,2.535,264,2.535,265,2.535,266,2.535,267,2.535,268,2.043,269,1.34,270,2.535,271,2.535,272,2.535,273,2.535,274,2.535]],["title/interfaces/Room.html",[235,0.438,292,1.087]],["body/interfaces/Room.html",[3,0.252,4,0.218,9,0.218,14,0.916,25,0.186,26,0.452,27,1.387,28,0.384,29,0.03,30,1.011,36,0.464,38,0.252,43,0.507,44,0.286,85,0.668,119,0.018,120,0.018,158,0.526,159,0.526,171,1.023,172,1.105,173,0.988,179,1.486,182,0.916,193,1.286,197,0.916,205,2.351,225,0.916,227,0.988,233,0.988,235,0.786,275,1.698,276,1.244,277,1.244,278,1.747,279,1.747,280,1.747,281,1.747,282,2.456,283,2.581,284,1.747,285,1.747,286,1.747,287,2.019,288,1.747,289,2.318,290,2.413,291,1.831,292,1.898,293,1.831,294,1.893,295,1.893,296,1.616,297,1.616,298,1.348,299,1.867,300,0.988,301,1.348,302,2.187,303,1.348,304,1.348,305,1.348,306,1.348,307,1.348,308,1.348,309,1.348,310,1.348,311,1.348,312,1.348,313,1.348,314,1.348,315,1.348,316,1.348,317,1.348,318,1.348,319,1.348,320,1.348,321,1.348,322,1.348,323,1.348,324,1.348,325,1.348,326,1.348,327,1.348,328,1.348,329,1.893,330,1.348,331,1.348,332,1.348,333,1.348,334,1.348,335,1.348,336,1.348,337,1.348,338,1.348,339,1.348,340,1.348,341,1.348,342,1.348,343,1.348,344,1.348,345,1.348,346,1.348]],["title/interfaces/UpdateBookRequest.html",[235,0.438,296,1.267]],["body/interfaces/UpdateBookRequest.html",[3,0.236,4,0.205,9,0.205,14,0.86,25,0.175,26,0.432,27,1.787,28,0.456,29,0.03,30,1.012,36,0.448,38,0.236,43,0.498,44,0.269,85,0.624,119,0.018,120,0.018,158,0.493,159,0.493,171,1.246,172,1.056,173,0.927,179,1.475,182,0.86,193,1.229,197,0.86,205,2.334,225,0.86,227,0.927,233,0.927,235,0.772,275,1.657,276,1.168,277,1.168,278,2.251,279,2.251,280,2.251,281,2.251,282,2.411,283,2.546,284,2.251,285,2.251,286,2.251,287,2.342,288,2.251,289,2.082,290,2.49,291,1.787,292,1.787,293,1.787,294,1.809,295,1.809,296,1.803,297,1.544,298,1.265,299,1.803,300,0.927,301,1.265,302,2.112,303,1.265,304,1.265,305,1.265,306,1.265,307,1.265,308,1.265,309,1.265,310,1.265,311,1.265,312,1.265,313,1.265,314,1.265,315,1.265,316,1.265,317,1.265,318,1.265,319,1.265,320,1.265,321,1.265,322,1.265,323,1.265,324,1.265,325,1.265,326,1.265,327,1.265,328,1.265,329,1.809,330,1.265,331,1.265,332,1.265,333,1.265,334,1.265,335,1.265,336,1.265,337,1.265,338,1.265,339,1.265,340,1.265,341,1.265,342,1.265,343,1.265,344,1.265,345,1.265,346,1.265]],["title/interfaces/UpdateBookshelfRequest.html",[235,0.438,297,1.267]],["body/interfaces/UpdateBookshelfRequest.html",[3,0.25,4,0.216,9,0.216,14,0.909,25,0.184,26,0.45,27,1.379,28,0.403,29,0.03,30,1.01,36,0.462,38,0.25,43,0.506,44,0.284,85,0.667,119,0.018,120,0.018,158,0.522,159,0.522,171,1.017,172,1.099,173,0.98,179,1.485,182,0.909,193,1.279,197,0.909,205,2.349,225,0.909,227,0.98,233,0.98,235,0.784,275,1.693,276,1.234,277,1.234,278,1.737,279,1.737,280,1.737,281,1.737,282,2.181,283,2.577,284,1.737,285,1.737,286,1.737,287,2.01,288,1.737,289,2.126,290,2.483,291,1.825,292,1.825,293,1.825,294,2.491,295,2.491,296,1.607,297,1.859,298,2.363,299,1.859,300,0.98,301,1.337,302,2.178,303,1.337,304,1.337,305,1.337,306,1.337,307,1.337,308,1.337,309,1.337,310,1.337,311,1.337,312,1.337,313,1.337,314,1.337,315,1.337,316,1.337,317,1.337,318,1.337,319,1.337,320,1.337,321,1.337,322,1.337,323,1.337,324,1.337,325,1.337,326,1.337,327,1.337,328,1.337,329,1.882,330,1.337,331,1.337,332,1.337,333,1.337,334,1.337,335,1.337,336,1.337,337,1.337,338,1.337,339,1.337,340,1.337,341,1.337,342,1.337,343,1.337,344,1.337,345,1.337,346,1.337]],["title/interfaces/UpdateEntityRequest.html",[235,0.438,299,1.267]],["body/interfaces/UpdateEntityRequest.html",[3,0.256,4,0.222,9,0.222,14,0.932,25,0.189,26,0.458,27,1.403,28,0.31,29,0.03,30,1.01,36,0.468,38,0.256,43,0.509,44,0.291,85,0.67,119,0.019,120,0.019,158,0.535,159,0.535,171,1.035,172,1.118,173,1.005,179,1.489,182,0.932,193,1.301,197,0.932,205,2.356,225,0.932,227,1.005,233,1.005,235,0.79,275,1.708,276,1.265,277,1.265,278,1.768,279,1.768,280,1.768,281,1.768,282,2.205,283,2.59,284,1.768,285,1.768,286,1.768,287,2.037,288,1.768,289,2.146,290,2.421,291,1.842,292,1.842,293,1.842,294,1.915,295,1.915,296,1.635,297,1.635,298,1.371,299,2.04,300,1.005,301,1.371,302,2.207,303,1.371,304,1.371,305,1.371,306,1.371,307,1.371,308,1.371,309,1.371,310,1.371,311,1.371,312,1.371,313,1.371,314,1.371,315,1.371,316,1.371,317,1.371,318,1.371,319,1.371,320,1.371,321,1.371,322,1.371,323,1.371,324,1.371,325,1.371,326,1.371,327,1.371,328,1.371,329,1.915,330,1.371,331,1.371,332,1.371,333,1.371,334,1.371,335,1.371,336,1.371,337,1.371,338,1.371,339,1.371,340,1.371,341,1.371,342,1.371,343,1.371,344,1.371,345,1.371,346,1.371]],["title/interfaces/User.html",[112,0.53,235,0.438]],["body/interfaces/User.html",[3,0.429,4,0.372,9,0.372,25,0.317,26,0.637,28,0.372,29,0.029,30,0.918,43,0.429,85,0.693,112,0.953,119,0.026,120,0.026,233,1.686,235,0.68,957,4.251]],["title/components/UserProfileComponent.html",[0,0.17,111,0.802]],["body/components/UserProfileComponent.html",[0,0.251,1,0.786,2,1.192,3,0.251,4,0.218,5,0.915,7,0.915,8,0.915,9,0.218,11,0.915,12,1.989,13,1.938,15,1.285,16,1.192,17,1.192,18,1.485,20,0.786,23,1.615,25,0.186,26,0.452,28,0.419,29,0.03,30,0.772,31,1.35,32,1.35,34,1.437,36,0.53,37,0.848,38,0.251,40,0.915,43,0.251,44,0.286,79,0.848,80,1.285,81,1.285,82,0.915,83,1.611,84,0.915,85,0.597,86,0.915,87,0.728,88,1.485,89,0.915,90,0.728,91,0.915,92,0.786,93,0.915,94,0.915,95,0.728,96,0.848,97,1.285,98,0.728,99,0.915,100,0.728,101,0.915,102,0.728,103,0.915,104,0.915,105,0.728,106,0.915,107,0.728,108,0.915,109,0.728,110,0.621,111,1.281,112,0.969,113,0.915,114,0.728,115,0.848,116,0.621,117,0.915,118,0.915,119,0.018,120,0.018,138,1.807,139,1.347,140,4.384,145,1.065,154,3.054,158,0.525,159,0.525,166,1.285,167,0.987,170,0.915,184,2.845,195,0.987,196,0.987,199,2.371,204,1.615,207,1.285,275,1.285,289,1.866,290,2.024,300,1.737,389,2.576,420,2.376,422,1.891,424,3.054,442,3.086,453,2.489,455,3.495,505,2.489,506,2.489,507,1.347,509,2.489,586,3.495,587,3.495,795,3.495,801,2.489,924,4.039,958,5.016,959,2.489,960,4.164,961,4.164,962,5.498,963,5.498,964,2.965,965,2.965,966,2.965,967,2.965,968,2.965,969,2.965,970,2.965,971,2.965,972,4.813,973,2.965,974,2.965,975,2.965,976,2.965,977,2.965,978,2.965,979,2.965,980,2.965,981,2.965,982,2.965,983,2.965,984,2.965,985,4.164,986,4.164,987,4.164]],["title/components/ValidateTokenComponent.html",[0,0.17,114,0.802]],["body/components/ValidateTokenComponent.html",[0,0.252,1,0.79,2,1.196,3,0.252,4,0.219,5,0.919,7,0.919,8,0.919,9,0.219,11,0.919,12,1.99,13,1.94,15,1.289,16,1.381,17,1.196,18,1.489,20,0.79,23,1.62,25,0.187,26,0.453,28,0.405,29,0.03,30,0.899,31,1.185,32,1.185,34,1.402,36,0.504,37,0.852,38,0.252,39,0.852,40,0.919,43,0.252,44,0.287,79,0.852,80,1.289,81,1.289,82,0.919,83,1.614,84,0.919,85,0.568,86,0.919,87,0.731,88,1.489,89,0.919,90,0.731,91,0.919,92,0.79,93,0.919,94,0.919,95,0.731,96,0.852,97,1.289,98,0.731,99,0.919,100,0.731,101,0.919,102,0.731,103,0.919,104,0.919,105,0.731,106,0.919,107,0.731,108,0.919,109,0.731,110,0.624,111,0.731,112,0.483,113,0.919,114,1.284,115,1.678,116,1.317,117,0.919,118,0.919,119,0.018,120,0.018,125,2.105,132,4.3,145,1.733,148,1.47,158,0.528,159,0.976,166,1.289,167,0.992,170,1.289,171,1.026,182,1.489,193,1.614,195,1.391,196,1.391,197,1.489,204,2.358,207,1.614,225,0.919,259,1.249,269,1.155,363,2.382,422,1.898,442,3.092,649,4.623,660,1.949,664,1.761,666,3.064,702,2.185,765,3.507,925,2.5,935,2.5,936,4.39,938,3.507,951,2.5,953,2.5,988,4.921,989,2.5,990,4.178,991,4.178,992,4.825,993,4.178,994,4.178,995,2.979,996,4.178,997,2.979,998,4.178,999,2.979,1000,4.178,1001,2.979,1002,2.979,1003,2.979,1004,2.979,1005,2.979,1006,4.825,1007,2.979,1008,2.979,1009,2.979,1010,2.979,1011,2.979,1012,2.979,1013,2.979,1014,4.178,1015,2.979,1016,2.979]],["title/coverage.html",[1017,3.738]],["body/coverage.html",[0,0.338,1,0.884,9,0.245,10,2.797,20,0.884,28,0.403,29,0.03,41,2.445,51,2.797,87,0.818,90,0.818,92,0.884,95,0.818,98,0.818,100,0.818,102,0.818,105,0.818,107,0.818,109,0.818,111,0.818,112,0.541,114,0.818,119,0.02,120,0.02,132,2.445,134,2.181,138,1.029,140,2.445,142,2.445,144,2.445,163,2.445,165,2.797,172,1.197,181,3.349,209,1.97,213,1.97,218,1.292,235,0.846,275,1.029,276,2.577,277,2.577,291,1.109,292,1.109,293,1.109,296,1.292,297,1.292,299,1.292,300,1.109,347,2.797,353,2.445,367,2.445,369,2.445,383,2.445,389,3.356,419,2.797,645,2.797,646,3.311,670,2.797,693,2.797,744,2.797,776,2.797,777,2.797,828,2.797,908,2.797,933,2.797,957,2.797,958,2.797,959,2.797,988,2.797,989,2.797,1017,2.797,1018,3.333,1019,3.333,1020,3.333,1021,5.119,1022,2.797,1023,6.406,1024,2.797,1025,6.515,1026,3.333,1027,3.333,1028,3.333,1029,3.333,1030,3.333,1031,5.119,1032,5.119,1033,3.333,1034,4.514,1035,3.333,1036,4.514,1037,4.514,1038,3.333,1039,3.333,1040,4.514,1041,5.119,1042,3.333,1043,3.333,1044,4.335,1045,4.296,1046,5.119,1047,3.754,1048,4.024,1049,3.789,1050,3.789,1051,4.024,1052,3.333]],["title/dependencies.html",[1053,2.003,1054,2.881]],["body/dependencies.html",[29,0.03,37,1.362,38,0.403,39,1.362,119,0.025,120,0.025,227,1.584,231,3.114,232,3.706,507,2.162,738,3.491,1054,3.491,1055,4.76,1056,6.605,1057,4.76,1058,5.664,1059,5.664,1060,4.76,1061,4.76,1062,4.76,1063,4.76,1064,4.76,1065,4.76,1066,5.664,1067,5.664,1068,4.76,1069,4.76,1070,4.76,1071,4.76,1072,4.76,1073,4.76]],["title/index.html",[25,0.171,715,2.292,1074,2.731]],["body/index.html",[0,0.304,4,0.321,29,0.024,33,3.669,85,0.474,119,0.024,120,0.024,174,3.669,177,3.207,218,1.695,254,2.877,269,1.695,574,3.669,575,3.669,710,2.861,721,4.891,738,4.274,803,2.861,843,5.104,848,3.669,866,3.669,1053,3.207,1075,5.38,1076,3.669,1077,5.828,1078,3.669,1079,4.372,1080,5.38,1081,6.244,1082,6.441,1083,4.372,1084,4.372,1085,4.372,1086,4.372,1087,3.669,1088,4.372,1089,4.372,1090,4.372,1091,4.372,1092,4.372,1093,5.828,1094,4.372,1095,4.372,1096,4.372,1097,4.372,1098,4.372,1099,5.38,1100,5.38,1101,6.081,1102,4.372,1103,5.38,1104,5.38,1105,4.372,1106,6.357,1107,4.372,1108,4.372,1109,4.372,1110,5.38,1111,4.372,1112,4.372,1113,4.372,1114,4.372,1115,4.372,1116,3.207,1117,4.372]],["title/modules.html",[123,3.266]],["body/modules.html",[29,0.026,119,0.026,120,0.026,122,3.854,123,3.854,1118,5.255,1119,5.255,1120,5.255]],["title/overview.html",[1116,3.266]],["body/overview.html",[2,1.452,29,0.026,79,1.452,110,1.063,119,0.026,120,0.026,121,4.936,157,4.26,163,3.722,180,3.722,233,1.689,397,3.477,593,4.26,803,3.321,1054,3.722,1116,3.722,1121,5.075,1122,5.075,1123,4.26,1124,5.881,1125,5.075,1126,5.075]],["title/properties.html",[26,0.426,1053,2.003]],["body/properties.html",[26,0.571,29,0.028,119,0.026,120,0.026,1078,4.42,1127,5.266]],["title/miscellaneous/typealiases.html",[1128,1.787,1129,3.928]],["body/miscellaneous/typealiases.html",[25,0.32,28,0.375,29,0.026,119,0.026,120,0.026,1044,3.745,1047,4.83,1048,3.745,1051,3.745,1128,3.341,1130,5.106,1131,4.286,1132,4.286,1133,4.286,1134,6.225]],["title/miscellaneous/variables.html",[1128,1.787,1135,3.297]],["body/miscellaneous/variables.html",[0,0.284,16,1.273,25,0.205,27,1.686,28,0.469,29,0.03,31,1.567,32,1.567,48,2.74,56,3.264,85,0.549,87,0.801,98,0.801,105,0.801,112,0.529,119,0.02,120,0.02,145,1.818,195,1.481,254,1.611,348,3.559,350,4.565,352,2.74,353,3.714,354,2.631,356,3.735,360,1.93,367,3.714,369,3.714,383,3.264,471,4.565,675,2.74,676,2.74,677,2.74,710,2.912,858,5.135,860,3.735,872,2.74,885,2.74,886,2.74,1022,2.74,1024,3.735,1044,2.394,1045,5.207,1047,4.487,1048,2.394,1049,4.565,1050,4.565,1051,2.394,1076,2.74,1087,2.74,1123,2.74,1128,2.136,1131,4.777,1132,4.25,1133,4.25,1135,2.74,1136,3.264,1137,3.264,1138,3.264,1139,3.264,1140,3.264,1141,3.264,1142,3.264,1143,4.451,1144,5.064,1145,3.264,1146,3.264,1147,5.692,1148,3.264,1149,3.264,1150,3.264,1151,3.264,1152,3.264,1153,3.264,1154,3.264,1155,3.264,1156,3.264,1157,3.264,1158,3.264,1159,4.451,1160,4.451,1161,3.264,1162,3.264,1163,3.264,1164,3.264,1165,3.264,1166,4.451,1167,4.451,1168,3.264,1169,5.439,1170,3.264,1171,3.264,1172,3.264,1173,3.264,1174,3.264,1175,3.264,1176,3.264]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":389,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1127,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.1.11",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["0.14.10",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":409,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.2s",{"_index":811,"title":{},"body":{"components/NavBarComponent.html":{}}}],["0.5.10",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":815,"title":{},"body":{"components/NavBarComponent.html":{}}}],["0/1",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":410,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1",{"_index":397,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"overview.html":{}}}],["1.5rem",{"_index":808,"title":{},"body":{"components/NavBarComponent.html":{}}}],["10",{"_index":1126,"title":{},"body":{"overview.html":{}}}],["100",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["1000",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["11px",{"_index":416,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{}}}],["12px",{"_index":415,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{}}}],["13",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":904,"title":{},"body":{"components/PageComponent.html":{}}}],["14",{"_index":1125,"title":{},"body":{"overview.html":{}}}],["14px",{"_index":417,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["15px",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{}}}],["16px",{"_index":414,"title":{},"body":{"components/ButtonComponent.html":{}}}],["18.2.0",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":1079,"title":{},"body":{"index.html":{}}}],["1ea7fd",{"_index":907,"title":{},"body":{"components/PageComponent.html":{}}}],["1em",{"_index":894,"title":{},"body":{"components/PageComponent.html":{}}}],["1px",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["1rem",{"_index":817,"title":{},"body":{"components/NavBarComponent.html":{}}}],["1},${col",{"_index":562,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2",{"_index":593,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":570,"title":{},"body":{"components/DashboardComponent.html":{}}}],["20px",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["24px",{"_index":418,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["2rem",{"_index":813,"title":{},"body":{"components/NavBarComponent.html":{}}}],["3",{"_index":595,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3/55",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":953,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["30px",{"_index":897,"title":{},"body":{"components/PageComponent.html":{}}}],["32px",{"_index":892,"title":{},"body":{"components/PageComponent.html":{}}}],["333",{"_index":413,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["357a14",{"_index":901,"title":{},"body":{"components/PageComponent.html":{}}}],["3em",{"_index":391,"title":{},"body":{"components/ButtonComponent.html":{}}}],["3px",{"_index":905,"title":{},"body":{"components/PageComponent.html":{}}}],["4",{"_index":597,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4/30",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":903,"title":{},"body":{"components/PageComponent.html":{}}}],["48px",{"_index":888,"title":{},"body":{"components/PageComponent.html":{}}}],["4b5563",{"_index":821,"title":{},"body":{"components/NavBarComponent.html":{}}}],["4px",{"_index":891,"title":{},"body":{"components/PageComponent.html":{}}}],["5",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["5.2.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["500",{"_index":822,"title":{},"body":{"components/NavBarComponent.html":{}}}],["555ab9",{"_index":405,"title":{},"body":{"components/ButtonComponent.html":{}}}],["6",{"_index":599,"title":{},"body":{"components/DashboardComponent.html":{}}}],["600px",{"_index":890,"title":{},"body":{"components/PageComponent.html":{}}}],["61d49e",{"_index":826,"title":{},"body":{"components/NavBarComponent.html":{}}}],["6px",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7.8.0",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":394,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["83",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":899,"title":{},"body":{"components/PageComponent.html":{}}}],["accessors",{"_index":357,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{}}}],["account",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["acme",{"_index":673,"title":{},"body":{"components/HeaderComponent.html":{}}}],["action",{"_index":366,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actions",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":936,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["add",{"_index":574,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["adding",{"_index":547,"title":{},"body":{"components/DashboardComponent.html":{}}}],["addon",{"_index":874,"title":{},"body":{"components/PageComponent.html":{}}}],["address",{"_index":665,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["adjust",{"_index":871,"title":{},"body":{"components/PageComponent.html":{}}}],["again",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alert(\"please",{"_index":539,"title":{},"body":{"components/DashboardComponent.html":{}}}],["alert('passwords",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["alert('registration",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert(err.error.message",{"_index":950,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["alias",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["already",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["angular/compiler",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":507,"title":{},"body":{"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/ValidateTokenComponent.html":{},"dependencies.html":{}}}],["anonymous",{"_index":801,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["api",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["apiurl",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["app.component.css",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1086,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":122,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["arg",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":858,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["argtypes",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arial",{"_index":403,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["array(shelf.numberofcolumns",{"_index":535,"title":{},"body":{"components/DashboardComponent.html":{}}}],["artifacts",{"_index":1095,"title":{},"body":{"index.html":{}}}],["assemble",{"_index":861,"title":{},"body":{"components/PageComponent.html":{}}}],["async",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atomic",{"_index":837,"title":{},"body":{"components/PageComponent.html":{}}}],["auth",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["auth/validate",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth0/angular",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{},"dependencies.html":{}}}],["authguard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":278,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["authservice",{"_index":138,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["auto",{"_index":887,"title":{},"body":{"components/PageComponent.html":{}}}],["autodocs",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1087,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1119,"title":{},"body":{"modules.html":{}}}],["await",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b.id",{"_index":554,"title":{},"body":{"components/DashboardComponent.html":{}}}],["b.isinreadinglist).length",{"_index":983,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["b.userid",{"_index":978,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["backend",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["background",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["backgroundcolor",{"_index":352,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":778,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["bar.component",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["bar.component.css",{"_index":779,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.html",{"_index":780,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":777,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:15",{"_index":793,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:16",{"_index":785,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:20",{"_index":791,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:26",{"_index":787,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:30",{"_index":788,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:35",{"_index":790,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:41",{"_index":792,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:45",{"_index":786,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["based",{"_index":487,"title":{},"body":{"components/DashboardComponent.html":{}}}],["behaviorsubject",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["between",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["black",{"_index":809,"title":{},"body":{"components/NavBarComponent.html":{}}}],["block",{"_index":386,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["book",{"_index":275,"title":{"interfaces/Book.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["book).subscribe",{"_index":552,"title":{},"body":{"components/DashboardComponent.html":{}}}],["book.author",{"_index":572,"title":{},"body":{"components/DashboardComponent.html":{}}}],["book.author.tolowercase().includes(this.searchquery.tolowercase",{"_index":521,"title":{},"body":{"components/DashboardComponent.html":{}}}],["book.id",{"_index":555,"title":{},"body":{"components/DashboardComponent.html":{}}}],["book.isinreadinglist",{"_index":514,"title":{},"body":{"components/DashboardComponent.html":{}}}],["book.title",{"_index":571,"title":{},"body":{"components/DashboardComponent.html":{}}}],["book.title.tolowercase().includes(this.searchquery.tolowercase",{"_index":520,"title":{},"body":{"components/DashboardComponent.html":{}}}],["booklink",{"_index":564,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["booklinkfe",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["books",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/UserProfileComponent.html":{}}}],["books.filter(b",{"_index":977,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookshelf",{"_index":293,"title":{"interfaces/Bookshelf.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["bookshelf.name",{"_index":579,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bookshelfgrid",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bookshelfid",{"_index":279,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["bookshelves",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/NavBarComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["bootstrap",{"_index":1122,"title":{},"body":{"overview.html":{}}}],["border",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["bottom",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["box",{"_index":406,"title":{},"body":{"components/ButtonComponent.html":{}}}],["browse",{"_index":1120,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":843,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["building",{"_index":832,"title":{},"body":{"components/PageComponent.html":{}}}],["built",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":348,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["button.component",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button.css",{"_index":349,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:hover",{"_index":823,"title":{},"body":{"components/NavBarComponent.html":{}}}],["buttoncomponent",{"_index":87,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":820,"title":{},"body":{"components/NavBarComponent.html":{}}}],["call",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["canactivate",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":584,"title":{},"body":{"components/DashboardComponent.html":{}}}],["canvas",{"_index":872,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["canvas.getbyrole('button",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaselement",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":1114,"title":{},"body":{"index.html":{}}}],["catalog",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{}}}],["catcherror",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["catcherror(error",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["categorize",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["ccc",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["cell",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["center",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":1089,"title":{},"body":{"index.html":{}}}],["check",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"index.html":{}}}],["child",{"_index":859,"title":{},"body":{"components/PageComponent.html":{}}}],["choice",{"_index":1109,"title":{},"body":{"index.html":{}}}],["choose",{"_index":576,"title":{},"body":{"components/DashboardComponent.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["class=\"divide",{"_index":566,"title":{},"body":{"components/DashboardComponent.html":{}}}],["class=\"grid",{"_index":590,"title":{},"body":{"components/DashboardComponent.html":{}}}],["classes",{"_index":358,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clear",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["cli",{"_index":1077,"title":{},"body":{"index.html":{}}}],["click",{"_index":373,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{}}}],["closemodal",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{}}}],["closeusermenu",{"_index":782,"title":{},"body":{"components/NavBarComponent.html":{}}}],["code",{"_index":1091,"title":{},"body":{"index.html":{}}}],["col",{"_index":556,"title":{},"body":{"components/DashboardComponent.html":{}}}],["collection",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{}}}],["collections",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["color",{"_index":360,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["cols",{"_index":591,"title":{},"body":{"components/DashboardComponent.html":{}}}],["column",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["columnsfromleft",{"_index":280,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["command",{"_index":1110,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"overview.html":{}}}],["compose",{"_index":856,"title":{},"body":{"components/PageComponent.html":{}}}],["confirm",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmation",{"_index":1007,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["confirmpassword",{"_index":912,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["connected",{"_index":854,"title":{},"body":{"components/PageComponent.html":{}}}],["console.error(\"error",{"_index":546,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.error('error",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["console.error('login",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('registration",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('reset",{"_index":663,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["console.error('user",{"_index":518,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(\"books",{"_index":336,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["console.log('authguard",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('login",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('received",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["console.log('redirecting",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('registration",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('saved",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["const",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["constructor(authservice",{"_index":652,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{}}}],["constructor(dbservice",{"_index":453,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(http",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{}}}],["constructor(private",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["constructor(route",{"_index":935,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["constructor(router",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["container",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["contents",{"_index":362,"title":{},"body":{"components/ButtonComponent.html":{}}}],["control",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converts",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":1017,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createbook",{"_index":602,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createbook(book",{"_index":341,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["createbookshelf",{"_index":603,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createbookshelf(bookshelf",{"_index":328,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["createhousehold",{"_index":604,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createhousehold(household",{"_index":305,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["createroom",{"_index":605,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createroom(room",{"_index":315,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["credentials",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["cursor",{"_index":387,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavBarComponent.html":{}}}],["dashboard",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{}}}],["dashboard'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["dashboard.component.css",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":90,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["data",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/PageComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["database",{"_index":800,"title":{},"body":{"components/NavBarComponent.html":{}}}],["database/database.component",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["databasecomponent",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["databaseservice",{"_index":300,"title":{"injectables/DatabaseService.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["db",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["dbservice",{"_index":455,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["declarations",{"_index":1121,"title":{},"body":{"overview.html":{}}}],["decodedtoken",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["decodedtoken?.sub",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["decoration",{"_index":805,"title":{},"body":{"components/NavBarComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultroute",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["deletebook",{"_index":606,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletebook(id",{"_index":345,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["deletebookshelf",{"_index":607,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletebookshelf(id",{"_index":333,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["deletehousehold",{"_index":608,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletehousehold(id",{"_index":309,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["deleteroom",{"_index":609,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleteroom(id",{"_index":319,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["dependencies",{"_index":1054,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":298,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["dev",{"_index":1084,"title":{},"body":{"index.html":{}}}],["development",{"_index":866,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["direction",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["directives",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1094,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1098,"title":{},"body":{"index.html":{}}}],["display",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["dist",{"_index":1097,"title":{},"body":{"index.html":{}}}],["divide",{"_index":568,"title":{},"body":{"components/DashboardComponent.html":{}}}],["docreateaccount",{"_index":876,"title":{},"body":{"components/PageComponent.html":{}}}],["docs",{"_index":869,"title":{},"body":{"components/PageComponent.html":{}}}],["docs/autodocs",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":886,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["dologin",{"_index":877,"title":{},"body":{"components/PageComponent.html":{}}}],["dologout",{"_index":878,"title":{},"body":{"components/PageComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["don't",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["driven",{"_index":834,"title":{},"body":{"components/PageComponent.html":{}}}],["dynamic",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1107,"title":{},"body":{"index.html":{}}}],["e2e8f0",{"_index":819,"title":{},"body":{"components/NavBarComponent.html":{}}}],["e7fdd8",{"_index":900,"title":{},"body":{"components/PageComponent.html":{}}}],["each",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{}}}],["ease",{"_index":812,"title":{},"body":{"components/NavBarComponent.html":{}}}],["easy",{"_index":842,"title":{},"body":{"components/PageComponent.html":{}}}],["element",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["email",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["empty",{"_index":601,"title":{},"body":{"components/DashboardComponent.html":{}}}],["emptyreadinglist",{"_index":589,"title":{},"body":{"components/DashboardComponent.html":{}}}],["emptysearchresults",{"_index":565,"title":{},"body":{"components/DashboardComponent.html":{}}}],["end",{"_index":1106,"title":{},"body":{"index.html":{}}}],["ending",{"_index":838,"title":{},"body":{"components/PageComponent.html":{}}}],["endopoints",{"_index":321,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["endpoints",{"_index":302,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["ensures",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["entire",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{}}}],["entry",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":662,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["error",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["errormessage",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["estate'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["eventcoalescing",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":371,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["exact",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{}}}],["example/button",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example/header",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example/page",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1103,"title":{},"body":{"index.html":{}}}],["expect(loginbutton).not.tobeinthedocument",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(loginbutton).tobeinthedocument",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(logoutbutton).tobeinthedocument",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["experience",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{}}}],["expired",{"_index":1016,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["exports",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["f8f9fa",{"_index":818,"title":{},"body":{"components/NavBarComponent.html":{}}}],["failed",{"_index":664,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["false",{"_index":363,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/NavBarComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["family",{"_index":398,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["favicon",{"_index":816,"title":{},"body":{"components/NavBarComponent.html":{}}}],["fetched",{"_index":337,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["fetches",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["files",{"_index":1090,"title":{},"body":{"index.html":{}}}],["fill",{"_index":906,"title":{},"body":{"components/PageComponent.html":{}}}],["filteredbooks",{"_index":452,"title":{},"body":{"components/DashboardComponent.html":{}}}],["first",{"_index":1112,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["fn",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":392,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["forgot",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["forgotpasswordcomponent",{"_index":95,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["forgotpasswordrequest",{"_index":209,"title":{"interfaces/ForgotPasswordRequest.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{},"coverage.html":{}}}],["form",{"_index":479,"title":{},"body":{"components/DashboardComponent.html":{}}}],["format",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formsmodule",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["found",{"_index":573,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fullscreen",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["further",{"_index":1115,"title":{},"body":{"index.html":{}}}],["gap",{"_index":598,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavBarComponent.html":{}}}],["generate",{"_index":1093,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1076,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["genre",{"_index":281,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getallbooks",{"_index":610,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getallbooks(id",{"_index":335,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getallbookshelvesbyuserid",{"_index":611,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getallbookshelvesbyuserid(userid",{"_index":324,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getallroomsbyuserid",{"_index":612,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getallroomsbyuserid(userid",{"_index":311,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getbooksbyshelf",{"_index":613,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getbooksbyshelf(shelfid",{"_index":339,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getbookshelfbyid",{"_index":614,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getbookshelfbyid(bookshelfid",{"_index":322,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getbookshelvesbyroom",{"_index":615,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getbookshelvesbyroom(roomid",{"_index":326,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getcellposition",{"_index":439,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getcellposition(i",{"_index":583,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getcellposition(index",{"_index":457,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getclasses",{"_index":375,"title":{},"body":{"components/ButtonComponent.html":{}}}],["getfilteredbooks",{"_index":503,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gethouseholdsbyuserid",{"_index":616,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["gethouseholdsbyuserid(userid",{"_index":303,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getroomsbyhouseholdid",{"_index":617,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getroomsbyhouseholdid(householdid",{"_index":313,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["getting",{"_index":1074,"title":{"index.html":{}},"body":{}}],["getuseremail",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["getuserid",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["github:rogr3/db",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["go",{"_index":575,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["graph",{"_index":1118,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":569,"title":{},"body":{"components/DashboardComponent.html":{}}}],["grid",{"_index":472,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["guard",{"_index":163,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guided",{"_index":864,"title":{},"body":{"components/PageComponent.html":{}}}],["h1",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{}}}],["h2",{"_index":807,"title":{},"body":{"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["handle",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["handler",{"_index":374,"title":{},"body":{"components/ButtonComponent.html":{}}}],["handy",{"_index":849,"title":{},"body":{"components/PageComponent.html":{}}}],["having",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["header.component",{"_index":883,"title":{},"body":{"components/PageComponent.html":{}}}],["header.css",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":98,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":396,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["help",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["helps",{"_index":855,"title":{},"body":{"components/PageComponent.html":{}}}],["helvetica",{"_index":401,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["here",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{}}}],["hide",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{}}}],["higher",{"_index":852,"title":{},"body":{"components/PageComponent.html":{}}}],["home",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"components/NavBarComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["home'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["home.component.css",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":100,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["household",{"_index":291,"title":{"interfaces/Household.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["household.name",{"_index":577,"title":{},"body":{"components/DashboardComponent.html":{}}}],["householdid",{"_index":282,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["households",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["http",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["http://localhost:4200",{"_index":1085,"title":{},"body":{"index.html":{}}}],["http://localhost:5267/v1/api",{"_index":301,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["http://localhost:5267/v1/api/auth",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["http://localhost:5267/v1/api/auth/register",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["http://localhost:5267/v1/api/auth/validate",{"_index":998,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["httpclient",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["httpclientmodule",{"_index":909,"title":{},"body":{"components/RegisterComponent.html":{}}}],["https://storybook.js.org/docs/configure/story",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://storybook.js.org/docs/essentials/actions#action",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://storybook.js.org/docs/writing",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":283,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["identifier",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["in/i",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inbox",{"_index":669,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["inherit",{"_index":895,"title":{},"body":{"components/PageComponent.html":{}}}],["injectable",{"_index":172,"title":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["injectables",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"overview.html":{}}}],["inline",{"_index":385,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["input",{"_index":377,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["inputs",{"_index":351,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["inset",{"_index":411,"title":{},"body":{"components/ButtonComponent.html":{}}}],["interface",{"_index":235,"title":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invalid",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["invoked",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenticated",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isbn",{"_index":284,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["isinreadinglist",{"_index":285,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["isloggedin",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/NavBarComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["ismodalopen",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{}}}],["isselectedcell",{"_index":440,"title":{},"body":{"components/DashboardComponent.html":{}}}],["isselectedcell(index",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["issuccess",{"_index":992,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["istyping",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{}}}],["items",{"_index":684,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["it’s",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["jane",{"_index":885,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["jwt",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["jwthelperservice",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["karma",{"_index":1105,"title":{},"body":{"index.html":{}}}],["knih",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":350,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":369,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["layout",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["learn",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{}}}],["learnmore",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["legend",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"overview.html":{}}}],["lets",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":853,"title":{},"body":{"components/PageComponent.html":{}}}],["lg:grid",{"_index":596,"title":{},"body":{"components/DashboardComponent.html":{}}}],["li",{"_index":898,"title":{},"body":{"components/PageComponent.html":{}}}],["library",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["line",{"_index":395,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["link",{"_index":666,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/NavBarComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["link:hover",{"_index":825,"title":{},"body":{"components/NavBarComponent.html":{}}}],["list",{"_index":587,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["literal",{"_index":625,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["loadbooks",{"_index":441,"title":{},"body":{"components/DashboardComponent.html":{}}}],["localstorage",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["localstorage.getitem('authtoken",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["localstorage.getitem('useremail",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["localstorage.removeitem('authtoken",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["localstorage.removeitem('useremail",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["localstorage.setitem('authtoken",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["localstorage.setitem('useremail",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["log",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggedin",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedout",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["login(email",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["login.component.css",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loginbutton",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["logout",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/NavBarComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["logoutbutton",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["losing",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["makes",{"_index":841,"title":{},"body":{"components/PageComponent.html":{}}}],["manage",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{}}}],["management",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["managing",{"_index":851,"title":{},"body":{"components/PageComponent.html":{}}}],["margin",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["match",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["matching",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(index",{"_index":559,"title":{},"body":{"components/DashboardComponent.html":{}}}],["max",{"_index":889,"title":{},"body":{"components/PageComponent.html":{}}}],["md:grid",{"_index":594,"title":{},"body":{"components/DashboardComponent.html":{}}}],["medium",{"_index":368,"title":{},"body":{"components/ButtonComponent.html":{}}}],["menu",{"_index":827,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menu:hover",{"_index":824,"title":{},"body":{"components/NavBarComponent.html":{}}}],["message",{"_index":649,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["meta",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["methods",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["miscellaneous",{"_index":1128,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":840,"title":{},"body":{"components/PageComponent.html":{}}}],["modal",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["mode",{"_index":381,"title":{},"body":{"components/ButtonComponent.html":{}}}],["modern",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":121,"title":{"modules/AppRoutingModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":123,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["more",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{},"components/PageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mt",{"_index":600,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["navbarcomponent",{"_index":20,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":848,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["navigateto",{"_index":783,"title":{},"body":{"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["navigateto(path",{"_index":789,"title":{},"body":{"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["navigatetostart",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{}}}],["need",{"_index":1111,"title":{},"body":{"index.html":{}}}],["needing",{"_index":847,"title":{},"body":{"components/PageComponent.html":{}}}],["net",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{}}}],["neue",{"_index":402,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["new",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"coverage.html":{},"index.html":{}}}],["newbook",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["newpassword",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["next",{"_index":660,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["ng",{"_index":1082,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavBarComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["none",{"_index":806,"title":{},"body":{"components/NavBarComponent.html":{}}}],["null",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":290,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{}}}],["numberofcolumns",{"_index":295,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["numberofrows",{"_index":294,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["nunito",{"_index":399,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["object",{"_index":968,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["observable",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["onbookshelfchange",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["once",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclick",{"_index":356,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["oncreateaccount",{"_index":675,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["onhouseholdchange",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onlogin",{"_index":676,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["onlogout",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["onroomchange",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onsearchinput",{"_index":446,"title":{},"body":{"components/DashboardComponent.html":{}}}],["openmodal",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["organize",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":803,"title":{},"body":{"components/NavBarComponent.html":{},"components/PageComponent.html":{},"index.html":{},"overview.html":{}}}],["out/i",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":378,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["outputs",{"_index":355,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["overview",{"_index":1116,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":893,"title":{},"body":{"components/PageComponent.html":{}}}],["package",{"_index":1053,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["page",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/LoginComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/ValidateTokenComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["page.css",{"_index":829,"title":{},"body":{"components/PageComponent.html":{}}}],["pagecomponent",{"_index":105,"title":{"components/PageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":830,"title":{},"body":{"components/PageComponent.html":{}}}],["panel",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"miscellaneous/variables.html":{}}}],["params['email",{"_index":1003,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["params['token",{"_index":1004,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["partial",{"_index":329,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["password",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["password'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["password.component",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":648,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":647,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":646,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:15",{"_index":655,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":656,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":653,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":943,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":942,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":941,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":937,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":654,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":939,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":940,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["path",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{}}}],["patterns",{"_index":850,"title":{},"body":{"components/PageComponent.html":{}}}],["personal",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{}}}],["piles",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["place",{"_index":486,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placed",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{}}}],["platform",{"_index":1108,"title":{},"body":{"index.html":{}}}],["play",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["pointer",{"_index":388,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavBarComponent.html":{}}}],["position",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":353,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["principal",{"_index":365,"title":{},"body":{"components/ButtonComponent.html":{}}}],["private",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["process",{"_index":835,"title":{},"body":{"components/PageComponent.html":{}}}],["profile",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["profile.component",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":961,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":960,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":959,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:15",{"_index":970,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:16",{"_index":971,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":967,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":966,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":969,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":964,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":965,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":1075,"title":{},"body":{"index.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"properties.html":{}}}],["provided",{"_index":668,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["providedin",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["providehttpclient",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1123,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":380,"title":{},"body":{"components/ButtonComponent.html":{}}}],["publication",{"_index":580,"title":{},"body":{"components/DashboardComponent.html":{}}}],["publicationyear",{"_index":286,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["radius",{"_index":390,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{}}}],["read",{"_index":868,"title":{},"body":{"components/PageComponent.html":{}}}],["reading",{"_index":586,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["readinglist",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["readinglist.length",{"_index":588,"title":{},"body":{"components/DashboardComponent.html":{}}}],["readinglistbooks",{"_index":962,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["real",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["recommend",{"_index":831,"title":{},"body":{"components/PageComponent.html":{}}}],["redirect",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["redirected",{"_index":955,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirecting",{"_index":1013,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["reference",{"_index":1117,"title":{},"body":{"index.html":{}}}],["register",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["register.component.css",{"_index":911,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":910,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["reload",{"_index":1088,"title":{},"body":{"index.html":{}}}],["reloads",{"_index":480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["render",{"_index":839,"title":{},"body":{"components/PageComponent.html":{}}}],["request",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["requestpasswordreset",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestpasswordreset(request",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["requestreset",{"_index":651,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["requests",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["required",{"_index":379,"title":{},"body":{"components/ButtonComponent.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(data",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["resetpasswordcomponent",{"_index":109,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["resetpasswordrequest",{"_index":213,"title":{"interfaces/ResetPasswordRequest.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{},"coverage.html":{}}}],["response",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["response.token",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["responses",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["results",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["returns",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["review",{"_index":844,"title":{},"body":{"components/PageComponent.html":{}}}],["rgba(0",{"_index":408,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["right",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["room",{"_index":292,"title":{"interfaces/Room.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["room.name",{"_index":578,"title":{},"body":{"components/DashboardComponent.html":{}}}],["roomid",{"_index":287,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["rooms",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["root'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["route",{"_index":938,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["router",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/ValidateTokenComponent.html":{}}}],["routerlink",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["routerlinkactive",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["routermodule.forroot(routes",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":558,"title":{},"body":{"components/DashboardComponent.html":{}}}],["row,col",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rowsfromtop",{"_index":288,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["run",{"_index":1081,"title":{},"body":{"index.html":{}}}],["running",{"_index":1099,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["sans",{"_index":400,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["save",{"_index":585,"title":{},"body":{"components/DashboardComponent.html":{}}}],["savebook",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{}}}],["saves",{"_index":478,"title":{},"body":{"components/DashboardComponent.html":{}}}],["scaffolding",{"_index":1092,"title":{},"body":{"index.html":{}}}],["search",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["searching",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchquery",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{}}}],["secondary",{"_index":383,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":540,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectbookfromsearch",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectbookfromsearch(book",{"_index":481,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectcell",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectcell(index",{"_index":483,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selected",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedbook",{"_index":550,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedbookshelf",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedbookshelfid",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedhouseholdid",{"_index":436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedroomid",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["selects",{"_index":485,"title":{},"body":{"components/DashboardComponent.html":{}}}],["send",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["sent",{"_index":667,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["serif",{"_index":404,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["serve",{"_index":1083,"title":{},"body":{"index.html":{}}}],["server",{"_index":1080,"title":{},"body":{"index.html":{}}}],["service",{"_index":506,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["service.ts",{"_index":277,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["service.ts:102",{"_index":640,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:106",{"_index":627,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:110",{"_index":644,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:114",{"_index":631,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:120",{"_index":637,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:124",{"_index":633,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:128",{"_index":638,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:132",{"_index":624,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:136",{"_index":642,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:140",{"_index":629,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:146",{"_index":632,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:151",{"_index":635,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:155",{"_index":623,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:159",{"_index":641,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:163",{"_index":628,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:75",{"_index":622,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:80",{"_index":639,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:84",{"_index":626,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:88",{"_index":643,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:92",{"_index":630,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["service.ts:98",{"_index":634,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["services",{"_index":862,"title":{},"body":{"components/PageComponent.html":{}}}],["services/auth.guard",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/auth.service",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["services/database",{"_index":505,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["session",{"_index":1008,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["session).subscribe",{"_index":1010,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["sessiontoken",{"_index":1009,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["set",{"_index":954,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sets",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{}}}],["settimeout",{"_index":951,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["shadow",{"_index":407,"title":{},"body":{"components/ButtonComponent.html":{}}}],["shelf",{"_index":533,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shelf.numberofrows).fill(null",{"_index":536,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shelfid",{"_index":636,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["shortly",{"_index":956,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["showusermenu",{"_index":781,"title":{},"body":{"components/NavBarComponent.html":{}}}],["sign",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["site",{"_index":814,"title":{},"body":{"components/NavBarComponent.html":{}}}],["size",{"_index":354,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["slot",{"_index":582,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sm:grid",{"_index":592,"title":{},"body":{"components/DashboardComponent.html":{}}}],["small",{"_index":367,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["smooth",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"index.html":{}}}],["space",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{}}}],["spy",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../button.stories.ts",{"_index":1131,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../header.stories.ts",{"_index":1132,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../page.stories.ts",{"_index":1133,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:106",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:114",{"_index":476,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:118",{"_index":456,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:139",{"_index":477,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:157",{"_index":482,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:16",{"_index":492,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:163",{"_index":489,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:17",{"_index":497,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:174",{"_index":484,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:18",{"_index":491,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:181",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:19",{"_index":490,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:190",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:20",{"_index":496,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:21",{"_index":494,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:22",{"_index":498,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:24",{"_index":501,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:25",{"_index":502,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:26",{"_index":500,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:28",{"_index":495,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":493,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:44",{"_index":499,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:45",{"_index":454,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:53",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:57",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:74",{"_index":504,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:81",{"_index":475,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:85",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:95",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/database/database.component.ts",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["src/app/forgot",{"_index":645,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/nav",{"_index":776,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts",{"_index":908,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:15",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:16",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:17",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:18",{"_index":913,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":914,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":933,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts:10",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/auth.guard.ts:7",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/auth.service.ts",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:24",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:26",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:31",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:36",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:41",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:45",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:66",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:75",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:86",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/database",{"_index":276,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["src/app/user",{"_index":958,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/validate",{"_index":988,"title":{},"body":{"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["src/stories/button.component.ts",{"_index":347,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/stories/button.component.ts:21",{"_index":364,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:25",{"_index":359,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:29",{"_index":370,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:37",{"_index":361,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:41",{"_index":372,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:43",{"_index":376,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.stories.ts",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/header.component.ts",{"_index":670,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/stories/header.component.ts:66",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.component.ts:69",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.component.ts:72",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.component.ts:75",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.stories.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/page.component.ts",{"_index":828,"title":{},"body":{"components/PageComponent.html":{},"coverage.html":{}}}],["src/stories/page.component.ts:69",{"_index":882,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.component.ts:71",{"_index":881,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.component.ts:75",{"_index":880,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.component.ts:79",{"_index":879,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.stories.ts",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/user.ts",{"_index":957,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["standalone",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["started",{"_index":715,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{}}}],["starting",{"_index":836,"title":{},"body":{"components/PageComponent.html":{}}}],["state",{"_index":549,"title":{},"body":{"components/DashboardComponent.html":{}}}],["statements",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":845,"title":{},"body":{"components/PageComponent.html":{}}}],["stats",{"_index":986,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["store",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["stored",{"_index":1096,"title":{},"body":{"index.html":{}}}],["stories",{"_index":860,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["story",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["storybook",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["storyobj",{"_index":1134,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["styleurl",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["submitted",{"_index":650,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscribe",{"_index":659,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["success",{"_index":934,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["successful",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["successfully",{"_index":1011,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["such",{"_index":857,"title":{},"body":{"components/PageComponent.html":{}}}],["svg",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["system",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tailwindcss/forms",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["tap",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["tap(response",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["tech",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["test",{"_index":1102,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1113,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1101,"title":{},"body":{"index.html":{}}}],["text",{"_index":804,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.authservice.getuseremail",{"_index":973,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.authservice.getuserid",{"_index":509,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.isloggedin",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/NavBarComponent.html":{}}}],["this.authservice.login(this.email",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":796,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.authservice.requestpasswordreset",{"_index":657,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.resetpassword",{"_index":948,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.useremail$.subscribe(email",{"_index":794,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.books",{"_index":511,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.books.filter(book",{"_index":513,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.bookshelfgrid",{"_index":534,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.bookshelves",{"_index":527,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.closemodal",{"_index":545,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.confirmpassword",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.dbservice.createbook(this.newbook).subscribe",{"_index":544,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dbservice.getallbooks(this.userid).subscribe((books",{"_index":975,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.dbservice.getallbooks(userid).subscribe((data",{"_index":510,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dbservice.getbookshelfbyid(this.selectedbookshelfid).subscribe(shelf",{"_index":531,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dbservice.getbookshelvesbyroom(this.selectedroomid).subscribe((data",{"_index":530,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dbservice.gethouseholdsbyuserid(userid).subscribe((data",{"_index":515,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dbservice.getroomsbyhouseholdid(this.selectedhouseholdid).subscribe((data",{"_index":525,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dbservice.updatebook(book.id",{"_index":551,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.email",{"_index":658,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errormessage",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.households",{"_index":516,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.delete(`${this.apiurl}/books/${id",{"_index":346,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.delete(`${this.apiurl}/bookshelves/${id",{"_index":334,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.delete(`${this.apiurl}/households/${id",{"_index":310,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.delete(`${this.apiurl}/rooms/${id",{"_index":320,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/books/${id",{"_index":338,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/books/bookshelf:${shelfid",{"_index":340,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/bookshelves/${roomid",{"_index":327,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/bookshelves/bookshelf/${bookshelfid",{"_index":323,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/bookshelves/user:${userid",{"_index":325,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/households/user:${userid",{"_index":304,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/rooms/householdid:${householdid",{"_index":314,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.get(`${this.apiurl}/rooms/user:${userid",{"_index":312,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.post(`${this.apiurl}/books",{"_index":342,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.post(`${this.apiurl}/bookshelves",{"_index":330,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.post(`${this.apiurl}/forgot",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.http.post(`${this.apiurl}/households",{"_index":306,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.post(`${this.apiurl}/login",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.http.post(`${this.apiurl}/reset",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.http.post(`${this.apiurl}/rooms",{"_index":316,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.post(this.apiurl",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["this.http.put(`${this.apiurl}/books/${id",{"_index":344,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.put(`${this.apiurl}/bookshelves/${id",{"_index":332,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.put(`${this.apiurl}/households/${id",{"_index":308,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.http.put(`${this.apiurl}/rooms/${id",{"_index":318,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["this.ismodalopen",{"_index":537,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.issuccess",{"_index":1014,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["this.istyping",{"_index":522,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.jwthelper.decodetoken(token",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.loadbooks",{"_index":508,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.message",{"_index":1006,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["this.newbook",{"_index":538,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newbook.bookshelfid",{"_index":543,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newbook.columnfromleft",{"_index":560,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newbook.householdid",{"_index":541,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newbook.roomid",{"_index":542,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newbook.rowfromtop",{"_index":561,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newbook.userid",{"_index":517,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.newpassword",{"_index":947,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.password",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.password).subscribe",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.primary",{"_index":382,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.readinglist",{"_index":512,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.readinglist.filter(b",{"_index":553,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.readinglistbooks",{"_index":981,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.rooms",{"_index":526,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1002,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["this.route.snapshot.queryparammap.get('email",{"_index":944,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.route.snapshot.queryparammap.get('token",{"_index":946,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":952,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/collections",{"_index":548,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/login",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["this.router.navigate([path",{"_index":799,"title":{},"body":{"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl('/dashboard",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/home",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.router.navigatebyurl(defaultroute",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["this.router.url",{"_index":798,"title":{},"body":{"components/NavBarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.searchquery.length",{"_index":523,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedbookshelf",{"_index":532,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedbookshelf.numberofcolumns",{"_index":557,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedbookshelfid",{"_index":529,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedhouseholdid",{"_index":524,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedroomid",{"_index":528,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.showusermenu",{"_index":797,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.size",{"_index":384,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.submitted",{"_index":661,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.success",{"_index":949,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token",{"_index":945,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.totalbooks",{"_index":979,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user",{"_index":884,"title":{},"body":{"components/PageComponent.html":{}}}],["this.userdata.email",{"_index":974,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userdata.name",{"_index":984,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.useremail",{"_index":795,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.useremailsubject.asobservable",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.useremailsubject.next(email",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.useremailsubject.next(null",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.useremailsubject.value",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["this.userid",{"_index":972,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.verifyemail(email",{"_index":1005,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["through",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{}}}],["throwerror",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["throwerror(error",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["tip",{"_index":870,"title":{},"body":{"components/PageComponent.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"components/NavBarComponent.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"miscellaneous/variables.html":{}}}],["today",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["togglereadinglist",{"_index":451,"title":{},"body":{"components/DashboardComponent.html":{}}}],["togglereadinglist(book",{"_index":488,"title":{},"body":{"components/DashboardComponent.html":{}}}],["toggleusermenu",{"_index":784,"title":{},"body":{"components/NavBarComponent.html":{}}}],["token",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["token.component",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["token.component.css",{"_index":991,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token.component.html",{"_index":990,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token.component.ts",{"_index":989,"title":{},"body":{"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["token.component.ts:14",{"_index":1001,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token.component.ts:15",{"_index":999,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token.component.ts:17",{"_index":994,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token.component.ts:21",{"_index":995,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token.component.ts:34",{"_index":997,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["token/validate",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["toolbar",{"_index":875,"title":{},"body":{"components/PageComponent.html":{}}}],["top",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["total",{"_index":987,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["totalbooks",{"_index":963,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["track",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["transition",{"_index":810,"title":{},"body":{"components/NavBarComponent.html":{}}}],["translate",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":412,"title":{},"body":{"components/ButtonComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["true",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":865,"title":{},"body":{"components/PageComponent.html":{}}}],["tutorials",{"_index":867,"title":{},"body":{"components/PageComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Household.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1129,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uis",{"_index":833,"title":{},"body":{"components/PageComponent.html":{}}}],["ul",{"_index":896,"title":{},"body":{"components/PageComponent.html":{}}}],["undefined",{"_index":519,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unit",{"_index":1100,"title":{},"body":{"index.html":{}}}],["up",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["updatebook",{"_index":618,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatebook(id",{"_index":343,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["updatebookrequest",{"_index":296,"title":{"interfaces/UpdateBookRequest.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["updatebookshelf",{"_index":619,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatebookshelf(id",{"_index":331,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["updatebookshelfrequest",{"_index":297,"title":{"interfaces/UpdateBookshelfRequest.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["updateentityrequest",{"_index":299,"title":{"interfaces/UpdateEntityRequest.html":{}},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"coverage.html":{}}}],["updatehousehold",{"_index":620,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updatehousehold(id",{"_index":307,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["updateroom",{"_index":621,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["updateroom(id",{"_index":317,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{}}}],["url",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["use",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/PageComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":112,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.name",{"_index":674,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userbooks",{"_index":976,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userbooks.filter(b",{"_index":982,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userbooks.length",{"_index":980,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userdata",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["userdata).subscribe",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userdata.email",{"_index":985,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["useremail",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/NavBarComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{}}}],["useremailsubject",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ForgotPasswordRequest.html":{},"interfaces/ResetPasswordRequest.html":{}}}],["userevent.click(loginbutton",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":289,"title":{},"body":{"interfaces/Book.html":{},"interfaces/Bookshelf.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"interfaces/Household.html":{},"interfaces/Room.html":{},"interfaces/UpdateBookRequest.html":{},"interfaces/UpdateBookshelfRequest.html":{},"interfaces/UpdateEntityRequest.html":{},"components/UserProfileComponent.html":{}}}],["userprofilecomponent",{"_index":111,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["using",{"_index":863,"title":{},"body":{"components/PageComponent.html":{}}}],["validate",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["validatetokencomponent",{"_index":114,"title":{"components/ValidateTokenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"coverage.html":{}}}],["value",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"injectables/DatabaseService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["variable",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1135,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":1015,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["verified",{"_index":1012,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["verifyemail",{"_index":993,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["verifyemail(email",{"_index":996,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["verifying",{"_index":1000,"title":{},"body":{"components/ValidateTokenComponent.html":{}}}],["version",{"_index":1078,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["via",{"_index":1104,"title":{},"body":{"index.html":{}}}],["view",{"_index":802,"title":{},"body":{"components/NavBarComponent.html":{}}}],["viewports",{"_index":873,"title":{},"body":{"components/PageComponent.html":{}}}],["visual",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{}}}],["visualize",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{}}}],["visually",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequest.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequest.html":{},"components/UserProfileComponent.html":{},"components/ValidateTokenComponent.html":{}}}],["web",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["weight",{"_index":393,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["welcome",{"_index":563,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["white",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{}}}],["width",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/PageComponent.html":{}}}],["within",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{}}}],["within(canvaselement",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":846,"title":{},"body":{"components/PageComponent.html":{}}}],["wrapper",{"_index":902,"title":{},"body":{"components/PageComponent.html":{}}}],["y",{"_index":567,"title":{},"body":{"components/DashboardComponent.html":{}}}],["year",{"_index":581,"title":{},"body":{"components/DashboardComponent.html":{}}}],["z",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1124,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                                NavBarComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BooklinkFE'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, NavBarComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BooklinkFE';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .container {\n    margin: 20px;\n  }\n  \n  .actions {\n    margin-bottom: 10px;\n  }\n  \n  .table {\n    width: 100%;\n    margin-top: 20px;\n  }\n  \n  .modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: white;\n    border: 1px solid #ccc;\n    padding: 20px;\n    z-index: 1000;\n  }\n  \n  .modal-content {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .modal-actions {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Router, RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ValidateTokenComponent } from './validate-token/validate-token.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { DatabaseComponent } from './database/database.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthService } from './services/auth.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\nexport const routes: Routes = [\n    { path: 'home', component: HomeComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent},\n    { path: 'auth/validate-token', component: ValidateTokenComponent },\n    { path: 'collections', component: DatabaseComponent, canActivate: [AuthGuard]},\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n    { path: 'profile', component: UserProfileComponent, canActivate: [AuthGuard]},\n    { path: 'forgot-password', component: ForgotPasswordComponent},\n    { path: 'reset-password', component: ResetPasswordComponent },\n    ];\n\n    @NgModule({\n        imports: [RouterModule.forRoot(routes)],\n        exports: [RouterModule]\n    })\n    export class AppRoutingModule {\n        constructor(private authService: AuthService, private router: Router) {\n          let defaultRoute = this.authService.isLoggedIn() ? '/dashboard' : '/home';\n          this.router.navigateByUrl(defaultRoute);\n        }\n      }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.guard.ts:7\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(): boolean {\n    const isAuthenticated = !!localStorage.getItem('authToken'); // Check token\n    console.log('AuthGuard check:', isAuthenticated);\n    return isAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                jwtHelper\n                            \n                            \n                                userEmail$\n                            \n                            \n                                    Private\n                                userEmailSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserEmail\n                            \n                            \n                                getUserId\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                requestPasswordReset\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserEmail\n                        \n                    \n                \n            \n            \n                \ngetUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestPasswordReset\n                        \n                    \n                \n            \n            \n                \nrequestPasswordReset(request: ForgotPasswordRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            ForgotPasswordRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(data: ResetPasswordRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5267/v1/api/auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtHelper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new JwtHelperService()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userEmailSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userEmailSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    localStorage.getItem('userEmail')\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n// Interfaces for password reset requests\nexport interface ForgotPasswordRequest {\n  email: string;\n}\n\nexport interface ResetPasswordRequest {\n  email: string;\n  token: string;\n  newPassword: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  // base auth url\n  private apiUrl = 'http://localhost:5267/v1/api/auth';\n\n  private jwtHelper = new JwtHelperService();\n\n  private userEmailSubject = new BehaviorSubject(\n    localStorage.getItem('userEmail')\n  );\n  userEmail$ = this.userEmailSubject.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // Send password reset request to backend\n  requestPasswordReset(request: ForgotPasswordRequest): Observable {\n    return this.http.post(`${this.apiUrl}/forgot-password`, request);\n  }\n\n  // backend call\n  resetPassword(data: ResetPasswordRequest) {\n    return this.http.post(`${this.apiUrl}/reset-password`, data);\n  }\n\n  login(email: string, password: string): Observable {\n    return this.http.post(`${this.apiUrl}/login`, { email, password }).pipe(\n      tap(response => {\n        // Store JWT in localStorage\n        console.log('Received token:', response.token);\n        localStorage.setItem('authToken', response.token);\n\n        // Store user email for later use\n        console.log('Saved userEmail:', email);\n        localStorage.setItem('userEmail', email);\n\n        this.userEmailSubject.next(email);\n      }),\n      // Handle error responses from backend\n      catchError(error => {\n        console.error('Error from backend:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  getUserId(): string | null {\n    const token = localStorage.getItem('authToken');\n    if (!token) return null;\n\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    return decodedToken?.sub || null;\n  }\n\n  // Clear auth data and redirect to home page\n  logout(): void {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    this.userEmailSubject.next(null);\n    this.router.navigateByUrl('/home');\n  }\n\n  getUserEmail(): string | null {\n    return this.userEmailSubject.value;\n  }\n\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('authToken');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Book.html":{"url":"interfaces/Book.html","title":"interface - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            bookshelfId\n                                        \n                                \n                                \n                                        \n                                            columnsFromLeft\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            householdId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isbn\n                                        \n                                \n                                \n                                        \n                                            isInReadingList\n                                        \n                                \n                                \n                                        \n                                            publicationYear\n                                        \n                                \n                                \n                                        \n                                            roomId\n                                        \n                                \n                                \n                                        \n                                            rowsFromTop\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bookshelfId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookshelfId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnsFromLeft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnsFromLeft:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        householdId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        householdId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isbn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isbn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isInReadingList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isInReadingList:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicationYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publicationYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowsFromTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowsFromTop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bookshelf.html":{"url":"interfaces/Bookshelf.html","title":"interface - Bookshelf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bookshelf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfColumns\n                                        \n                                \n                                \n                                        \n                                            numberOfRows\n                                        \n                                \n                                \n                                        \n                                            roomId\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfColumns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfColumns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/stories/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./button.css\n            \n\n\n            \n                template\n                 \n  {{ label }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundColor\n                            \n                            \n                                label\n                            \n                            \n                                primary\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backgroundColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:25\n                            \n                        \n                \n                    \n                        What background color to use\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:37\n                            \n                        \n                \n                    \n                        Button contents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        primary\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:21\n                            \n                        \n                \n                    \n                        Is this the principal call to action on the page?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"small\" | \"medium\" | \"large\"\n\n                    \n                \n                \n                    \n                        Default value : 'medium'\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:29\n                            \n                        \n                \n                    \n                        How large should the button be?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:41\n                            \n                        \n                \n                    \n                        Optional click handler\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classes\n                    \n                \n\n                \n                    \n                        getclasses()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/button.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` \n  {{ label }}\n`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n\n    \n\n\n    \n                \n                    ./button.css\n                \n                .storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                            \n                                bookshelfGrid\n                            \n                            \n                                bookshelves\n                            \n                            \n                                households\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                isTyping\n                            \n                            \n                                newBook\n                            \n                            \n                                readingList\n                            \n                            \n                                rooms\n                            \n                            \n                                searchQuery\n                            \n                            \n                                selectedBookshelf\n                            \n                            \n                                selectedBookshelfId\n                            \n                            \n                                selectedHouseholdId\n                            \n                            \n                                selectedRoomId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getCellPosition\n                            \n                            \n                                isSelectedCell\n                            \n                            \n                                loadBooks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBookshelfChange\n                            \n                            \n                                onHouseholdChange\n                            \n                            \n                                onRoomChange\n                            \n                            \n                                onSearchInput\n                            \n                            \n                                openModal\n                            \n                            \n                                saveBook\n                            \n                            \n                                selectBookFromSearch\n                            \n                            \n                                selectCell\n                            \n                            \n                                toggleReadingList\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredBooks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellPosition\n                        \n                    \n                \n            \n            \n                \ngetCellPosition(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Converts a cell index into \"row,col\" string format\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSelectedCell\n                        \n                    \n                \n            \n            \n                \nisSelectedCell(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBooks\n                        \n                    \n                \n            \n            \n                \nloadBooks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBookshelfChange\n                        \n                    \n                \n            \n            \n                \nonBookshelfChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Fetches and sets the selected bookshelf layout grid\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHouseholdChange\n                        \n                    \n                \n            \n            \n                \nonHouseholdChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRoomChange\n                        \n                    \n                \n            \n            \n                \nonRoomChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchInput\n                        \n                    \n                \n            \n            \n                \nonSearchInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveBook\n                        \n                    \n                \n            \n            \n                \nsaveBook()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Saves the new book form and reloads books\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectBookFromSearch\n                        \n                    \n                \n            \n            \n                \nselectBookFromSearch(book: Book)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                book\n                                            \n                                                            Book\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCell\n                        \n                    \n                \n            \n            \n                \nselectCell(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Selects a grid cell to place a book based on its index\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReadingList\n                        \n                    \n                \n            \n            \n                \ntoggleReadingList(book: Book)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                book\n                                            \n                                                            Book\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Book[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookshelfGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookshelves\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Bookshelf[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        households\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Household[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTyping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newBook\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: '',\n        publicationYear: 0,\n        isInReadingList: false,\n        columnsFromLeft: 0,\n        rowsFromTop: 0,\n        householdId: '',\n        roomId: '',\n        bookshelfId: '',\n        userId: '',\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readingList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Book[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rooms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedBookshelf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedBookshelfId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedHouseholdId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedRoomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredBooks\n                    \n                \n\n                \n                    \n                        getfilteredBooks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/dashboard.component.ts:74\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Book, Bookshelf, DatabaseService, Room, Household } from '../services/database-service';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n    selector: 'app-dashboard',\n    standalone: true,\n    imports: [CommonModule, FormsModule, RouterModule],\n    templateUrl: './dashboard.component.html',\n    styleUrl: './dashboard.component.css'\n})\nexport class DashboardComponent {\n    households: Household[] = [];\n    rooms: Room[] = [];\n    bookshelves: Bookshelf[] = [];\n    books: Book[] = [];\n    readingList: Book[] = [];\n    isTyping: boolean = false;\n    searchQuery: string = '';\n\n    selectedHouseholdId: string | null = null;\n    selectedRoomId: string | null = null;\n    selectedBookshelfId: string | null = null;\n\n    newBook: any = {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: '',\n        publicationYear: 0,\n        isInReadingList: false,\n        columnsFromLeft: 0,\n        rowsFromTop: 0,\n        householdId: '',\n        roomId: '',\n        bookshelfId: '',\n        userId: '',\n    };\n\n    isModalOpen: boolean = false;\n    selectedBookshelf: any = null;\n    bookshelfGrid: any[] = [];\n\n    constructor(\n        private dbService: DatabaseService,\n        private router: Router,\n        private authService: AuthService\n    ) {}\n\n    ngOnInit(): void {\n        this.loadBooks();\n    }\n\n    loadBooks(): void {\n        const userId = this.authService.getUserId();\n        if (userId) {\n            this.dbService.getAllBooks(userId).subscribe((data: Book[]) => {\n                this.books = data;\n                this.readingList = this.books.filter(book => book.isInReadingList);\n\n                this.dbService.getHouseholdsByUserId(userId).subscribe((data: Household[]) => {\n                    this.households = data;\n                });\n            });\n            this.newBook.userId = userId;\n        } else {\n            console.error('User ID is null or undefined');\n        }\n    }\n\n    get filteredBooks(): Book[] {\n        return this.books.filter(book =>\n            book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\n            book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\n        );\n    }\n\n    onSearchInput(): void {\n        this.isTyping = this.searchQuery.length > 0;\n    }\n\n    onHouseholdChange(): void {\n        if (!this.selectedHouseholdId) return;\n        this.dbService.getRoomsByHouseholdId(this.selectedHouseholdId).subscribe((data: Room[]) => {\n            this.rooms = data;\n            this.bookshelves = [];\n            this.selectedRoomId = null;\n            this.selectedBookshelfId = null;\n        });\n    }\n\n    onRoomChange(): void {\n        if (!this.selectedRoomId) return;\n        this.dbService.getBookshelvesByRoom(this.selectedRoomId).subscribe((data: Bookshelf[]) => {\n            this.bookshelves = data;\n            this.selectedBookshelfId = null;\n        });\n    }\n\n    /**\n     * Fetches and sets the selected bookshelf layout grid\n     */\n    onBookshelfChange(): void {\n        if (!this.selectedBookshelfId) return;\n        this.dbService.getBookshelfById(this.selectedBookshelfId).subscribe(shelf => {\n            this.selectedBookshelf = shelf;\n            this.bookshelfGrid = Array(shelf.numberOfColumns * shelf.numberOfRows).fill(null);\n        });\n    }\n\n    openModal(): void {\n        this.isModalOpen = true;\n    }\n\n    closeModal(): void {\n        this.isModalOpen = false;\n        this.newBook = {\n            title: '',\n            author: '',\n            genre: '',\n            isbn: '',\n            publicationYear: 0,\n            isInReadingList: false,\n            columnsFromLeft: 0,\n            rowsFromTop: 0,\n            householdId: '',\n            roomId: '',\n            bookshelfId: '',\n            userId: '',\n        };\n    }\n\n    /**\n     * Saves the new book form and reloads books\n     */\n    saveBook(): void {\n        if (!this.selectedBookshelfId) {\n            alert(\"Please select a bookshelf.\");\n            return;\n        }\n\n        this.newBook.householdId = this.selectedHouseholdId;\n        this.newBook.roomId = this.selectedRoomId;\n        this.newBook.bookshelfId = this.selectedBookshelfId;\n\n        this.dbService.createBook(this.newBook).subscribe(() => {\n            this.closeModal();\n            this.loadBooks();\n        }, error => {\n            console.error(\"Error adding book:\", error);\n        });\n    }\n\n    selectBookFromSearch(book: Book): void {\n        this.router.navigate(['/collections'], {\n            state: { selectedBook: book }\n        });\n    }\n\n    toggleReadingList(book: Book): void {\n        this.dbService.updateBook(book.id, book).subscribe(() => {\n            if (!book.isInReadingList) {\n                this.readingList = this.readingList.filter(b => b.id !== book.id);\n            }\n        });\n    }\n\n    /**\n     * Selects a grid cell to place a book based on its index\n     */\n    selectCell(index: number): void {\n        const col = index % this.selectedBookshelf.numberOfColumns;\n        const row = Math.floor(index / this.selectedBookshelf.numberOfColumns);\n        this.newBook.columnFromLeft = col + 1;\n        this.newBook.rowFromTop = row + 1;\n    }\n\n    isSelectedCell(index: number): boolean {\n        const col = index % this.selectedBookshelf.numberOfColumns;\n        const row = Math.floor(index / this.selectedBookshelf.numberOfColumns);\n        return this.newBook.columnFromLeft === col + 1 && this.newBook.rowFromTop === row + 1;\n    }\n\n    /**\n     * Converts a cell index into \"row,col\" string format\n     */\n    getCellPosition(index: number): string {\n        const col = index % this.selectedBookshelf.numberOfColumns;\n        const row = Math.floor(index / this.selectedBookshelf.numberOfColumns);\n        return `${row + 1},${col + 1}`;\n    }\n}\n\n    \n\n    \n        \n    Welcome to Booklink!\n\n    \n        \n\n        \n             0; else emptySearchResults\" class=\"divide-y divide-gray-200\">\n                \n                    {{ book.title }}\n                    {{ book.author }}\n                \n            \n            \n                No books found.\n            \n        \n    \n\n\n\n    \n        \n            + Add New Book\n        \n        \n            Go to Your Collections\n        \n        \n            \n                Add a New Book\n\n                \n                    \n                    \n                        \n                        Select Household\n                        \n                            Choose Household\n                            {{ household.name }}\n                            \n                        \n\n                        \n                        Select Room\n                        \n                            Choose Room\n                            {{ room.name }}\n                        \n\n                        \n                        Select Bookshelf\n                        \n                            Choose Bookshelf\n                            {{ bookshelf.name }}\n                            \n                        \n\n                        \n                        Book Title\n                        \n\n                        Author\n                        \n\n                        Genre\n                        \n\n                        \n                            \n                                ISBN\n                                \n                            \n\n                            \n                                Publication Year\n                                \n                            \n                        \n\n                    \n\n                    \n                    \n                        Click a slot on the bookshelf:\n                        \n                        \n                            \n                                {{ getCellPosition(i) }}\n                            \n                        \n                    \n                \n\n                \n                    Cancel\n                    Save\n                \n            \n        \n    \n\n    \n    \n        Reading List ({{ readingList.length }})\n         0; else emptyReadingList\"\n            class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-4\">\n            \n                {{ book.title }}\n                {{ book.author }}\n\n                \n                    \n                        \n                        In Reading List\n                    \n                \n            \n        \n        \n            Your reading list is empty.\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Welcome to Booklink!                                 0; else emptySearchResults\" class=\"divide-y divide-gray-200\">                                    {{ book.title }}                    {{ book.author }}                                                        No books found.                                                + Add New Book                            Go to Your Collections                                            Add a New Book                                                                                                        Select Household                                                    Choose Household                            {{ household.name }}                                                                                                    Select Room                                                    Choose Room                            {{ room.name }}                                                                        Select Bookshelf                                                    Choose Bookshelf                            {{ bookshelf.name }}                                                                                                    Book Title                                                Author                                                Genre                                                                                                            ISBN                                                                                                                        Publication Year                                                                                                                                                                        Click a slot on the bookshelf:                                                                                                            {{ getCellPosition(i) }}                                                                                                                            Cancel                    Save                                                        Reading List ({{ readingList.length }})         0; else emptyReadingList\"            class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-4\">                            {{ book.title }}                {{ book.author }}                                                                                    In Reading List                                                                            Your reading list is empty.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                createBookshelf\n                            \n                            \n                                createHousehold\n                            \n                            \n                                createRoom\n                            \n                            \n                                deleteBook\n                            \n                            \n                                deleteBookshelf\n                            \n                            \n                                deleteHousehold\n                            \n                            \n                                deleteRoom\n                            \n                            \n                                getAllBooks\n                            \n                            \n                                getAllBookshelvesByUserId\n                            \n                            \n                                getAllRoomsByUserId\n                            \n                            \n                                getBooksByShelf\n                            \n                            \n                                getBookshelfById\n                            \n                            \n                                getBookshelvesByRoom\n                            \n                            \n                                getHouseholdsByUserId\n                            \n                            \n                                getRoomsByHouseholdId\n                            \n                            \n                                updateBook\n                            \n                            \n                                updateBookshelf\n                            \n                            \n                                updateHousehold\n                            \n                            \n                                updateRoom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/database-service.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBook\n                        \n                    \n                \n            \n            \n                \ncreateBook(book: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                book\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBookshelf\n                        \n                    \n                \n            \n            \n                \ncreateBookshelf(bookshelf: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookshelf\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createHousehold\n                        \n                    \n                \n            \n            \n                \ncreateHousehold(household: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                household\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoom\n                        \n                    \n                \n            \n            \n                \ncreateRoom(room: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                room\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBook\n                        \n                    \n                \n            \n            \n                \ndeleteBook(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBookshelf\n                        \n                    \n                \n            \n            \n                \ndeleteBookshelf(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteHousehold\n                        \n                    \n                \n            \n            \n                \ndeleteHousehold(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoom\n                        \n                    \n                \n            \n            \n                \ndeleteRoom(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBooks\n                        \n                    \n                \n            \n            \n                \ngetAllBooks(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBookshelvesByUserId\n                        \n                    \n                \n            \n            \n                \ngetAllBookshelvesByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRoomsByUserId\n                        \n                    \n                \n            \n            \n                \ngetAllRoomsByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBooksByShelf\n                        \n                    \n                \n            \n            \n                \ngetBooksByShelf(shelfId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shelfId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookshelfById\n                        \n                    \n                \n            \n            \n                \ngetBookshelfById(bookshelfId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookshelfId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookshelvesByRoom\n                        \n                    \n                \n            \n            \n                \ngetBookshelvesByRoom(roomId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roomId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHouseholdsByUserId\n                        \n                    \n                \n            \n            \n                \ngetHouseholdsByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoomsByHouseholdId\n                        \n                    \n                \n            \n            \n                \ngetRoomsByHouseholdId(householdId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                householdId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBook\n                        \n                    \n                \n            \n            \n                \nupdateBook(id: string, book: UpdateBookRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                book\n                                            \n                                                            UpdateBookRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBookshelf\n                        \n                    \n                \n            \n            \n                \nupdateBookshelf(id: string, bookshelf: UpdateBookshelfRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookshelf\n                                            \n                                                            UpdateBookshelfRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHousehold\n                        \n                    \n                \n            \n            \n                \nupdateHousehold(id: string, household: UpdateEntityRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                household\n                                            \n                                                            UpdateEntityRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRoom\n                        \n                    \n                \n            \n            \n                \nupdateRoom(id: string, room: UpdateEntityRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/database-service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                room\n                                            \n                                                            UpdateEntityRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5267/v1/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/database-service.ts:75\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                message\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forgot-password/forgot-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        requestReset\n                        \n                    \n                \n            \n            \n                \nrequestReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/forgot-password/forgot-password.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/forgot-password/forgot-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/forgot-password/forgot-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/forgot-password/forgot-password.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.css'\n})\n\nexport class ForgotPasswordComponent {\n  email: string = '';\n  message: string = '';\n  submitted = false;\n\n  constructor(private authService: AuthService) { }\n  \n\n  requestReset(): void {\n    this.authService.requestPasswordReset({ email: this.email }).subscribe({\n      next: () => this.submitted = true,\n      error: (err: any) => console.error('Reset request failed:', err)\n    });\n  }\n}\n\n    \n\n    \n        \n    Reset Your Password\n  \n    \n      \n        Email address\n        \n      \n      \n        Send Reset Link\n      \n    \n  \n    The request was sent to the provided email address. Check your inbox for \"Password reset\" email message.\n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Reset Your Password                    Email address                            Send Reset Link                The request was sent to the provided email address. Check your inbox for \"Password reset\" email message.    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequest.html":{"url":"interfaces/ForgotPasswordRequest.html","title":"interface - ForgotPasswordRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n// Interfaces for password reset requests\nexport interface ForgotPasswordRequest {\n  email: string;\n}\n\nexport interface ResetPasswordRequest {\n  email: string;\n  token: string;\n  newPassword: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  // base auth url\n  private apiUrl = 'http://localhost:5267/v1/api/auth';\n\n  private jwtHelper = new JwtHelperService();\n\n  private userEmailSubject = new BehaviorSubject(\n    localStorage.getItem('userEmail')\n  );\n  userEmail$ = this.userEmailSubject.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // Send password reset request to backend\n  requestPasswordReset(request: ForgotPasswordRequest): Observable {\n    return this.http.post(`${this.apiUrl}/forgot-password`, request);\n  }\n\n  // backend call\n  resetPassword(data: ResetPasswordRequest) {\n    return this.http.post(`${this.apiUrl}/reset-password`, data);\n  }\n\n  login(email: string, password: string): Observable {\n    return this.http.post(`${this.apiUrl}/login`, { email, password }).pipe(\n      tap(response => {\n        // Store JWT in localStorage\n        console.log('Received token:', response.token);\n        localStorage.setItem('authToken', response.token);\n\n        // Store user email for later use\n        console.log('Saved userEmail:', email);\n        localStorage.setItem('userEmail', email);\n\n        this.userEmailSubject.next(email);\n      }),\n      // Handle error responses from backend\n      catchError(error => {\n        console.error('Error from backend:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  getUserId(): string | null {\n    const token = localStorage.getItem('authToken');\n    if (!token) return null;\n\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    return decodedToken?.sub || null;\n  }\n\n  // Clear auth data and redirect to home page\n  logout(): void {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    this.userEmailSubject.next(null);\n    this.router.navigateByUrl('/home');\n  }\n\n  getUserEmail(): string | null {\n    return this.userEmailSubject.value;\n  }\n\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('authToken');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/stories/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                ButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./header.css\n            \n\n\n            \n                template\n                  \n    \n      \n        \n          \n          \n          \n        \n      \n      Acme\n    \n    \n      \n        \n          Welcome, {{ user.name }}!\n        \n        \n      \n      \n        \n        \n      \n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCreateAccount\n                            \n                            \n                                onLogin\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCreateAccount\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLogin\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLogout\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:72\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `\n  \n    \n      \n        \n          \n          \n          \n        \n      \n      Acme\n    \n    \n      \n        \n          Welcome, {{ user.name }}!\n        \n        \n      \n      \n        \n        \n      \n    \n  \n`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter();\n\n  @Output()\n  onLogout = new EventEmitter();\n\n  @Output()\n  onCreateAccount = new EventEmitter();\n}\n\n    \n\n\n    \n                \n                    ./header.css\n                \n                .storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Acme                                Welcome, {{ user.name }}!                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                learnMore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToStart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToStart\n                        \n                    \n                \n            \n            \n                \nnavigateToStart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        learnMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n  learnMore = false;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  navigateToStart(): void {\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/dashboard']);\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n\n        \n            \n                Organize Your Household Library Today, With Booklink\n            \n            \n                Booklink lets you manage your personal book collection — no more searching through piles or losing\n                books!\n            \n\n            \n            \n                \n                    Get started\n                \n\n                \n                    {{ learnMore ? 'Hide' : 'Learn more' }} →\n                \n            \n        \n\n        \n        \n            \n                \n                    Booklink is a personal book management system built to help you\n                        track, categorize, and visualize books within your home. Each book can be placed visually into a\n                        bookshelf grid.\n                    \n                \n            \n\n            \n                \n                    \n                    Organize books by household → room → bookshelf → exact position.\n                        It’s like having a visual catalog of your entire collection.\n                \n            \n\n            \n                \n                    Built with modern web tech (Angular, .NET), Booklink ensures a\n                        smooth and secure experience.\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Organize Your Household Library Today, With Booklink                                        Booklink lets you manage your personal book collection — no more searching through piles or losing                books!                                                                        Get started                                                    {{ learnMore ? \\'Hide\\' : \\'Learn more\\' }} →                                                                                                    Booklink is a personal book management system built to help you                        track, categorize, and visualize books within your home. Each book can be placed visually into a                        bookshelf grid.                                                                                                                    Organize books by household → room → bookshelf → exact position.                        It’s like having a visual catalog of your entire collection.                                                                            Built with modern web tech (Angular, .NET), Booklink ensures a                        smooth and secure experience.                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Household.html":{"url":"interfaces/Household.html","title":"interface - Household","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Household\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, RouterLinkActive],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\n\nexport class LoginComponent {\n  constructor(private authService: AuthService, private router: Router) {}\n  \n    email = '';\n    password = '';\n    errorMessage = '';\n\n    login() {\n      this.authService.login(this.email, this.password).subscribe({\n        next: (response) => {\n          console.log('Login successful:', response);\n          console.log('Redirecting to /dashboard...');\n          this.router.navigateByUrl('/dashboard'); // Redirect to search page\n        },\n        error: (err) => {\n          console.error('Login failed:', err);\n          this.errorMessage = 'Invalid credentials. Please try again.';\n        }\n      });\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Booklink\n            \n        \n        Sign in to your account\n    \n  \n    \n      \n        \n          Email address\n          \n            \n          \n        \n  \n        \n          \n            Password\n            \n              Forgot password?\n            \n          \n          \n            \n          \n          \n        \n  \n        \n          Sign in\n        \n      \n  \n      \n        Don't have an account?\n        Sign up here!\n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Booklink                            Sign in to your account                                  Email address                                                                        Password                          Forgot password?                                                                                            Sign in                              Don\\'t have an account?        Sign up here!              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav-bar/nav-bar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nav-bar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n            \n                styleUrls\n                ./nav-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showUserMenu\n                            \n                            \n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeUserMenu\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav-bar/nav-bar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeUserMenu\n                        \n                    \n                \n            \n            \n                \ncloseUserMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-bar/nav-bar.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-bar/nav-bar.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-bar/nav-bar.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-bar/nav-bar.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-bar/nav-bar.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleUserMenu\n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-bar/nav-bar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showUserMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-bar/nav-bar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-bar/nav-bar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'nav-bar',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, RouterLinkActive],\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent {\n  userEmail: string | null = null;\n  showUserMenu: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.userEmail$.subscribe(email => {\n      this.userEmail = email;\n    });\n  }\n\n  isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.showUserMenu = false;\n  }\n\n  navigateTo(path: string): void {\n    if (this.router.url !== path) {\n      this.router.navigate([path]);\n    }\n  }\n\n  toggleUserMenu(): void {\n    this.showUserMenu = !this.showUserMenu;\n  }\n  \n  closeUserMenu(): void {\n    this.showUserMenu = false;\n  }\n}\n    \n\n    \n        \n\n    \n        \n        \n            \n            \n                \n                \n                \n                    Booklink\n                    \n                \n\n                \n                \n                    \n                        \n                        Home\n                        \n                        \n                        Dashboard\n                        Database\n                    \n                \n            \n\n            \n            \n                \n                \n                Login\n                Register\n\n                \n                \n                    \n                        \n                        \n                            \n                            {{ userEmail || 'Anonymous User' }}\n                        \n                    \n\n                    \n                    \n                        \n                            View Profile\n                        \n                        \n                            Sign out\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./nav-bar.component.css\n                \n                .title-link {\n    text-decoration: none;\n  }\n  \n  .title-link h2 {\n    font-size: 1.5rem;\n    font-weight: 700;\n    margin: 0;\n    color: black;\n    transition: color 0.2s ease;\n  }\n  \n  .nav-left {\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n  }\n  \n  .site-title {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n  \n  .nav-favicon {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem 2rem;\n    background-color: #f8f9fa;\n    border-bottom: 1px solid #e2e8f0;\n  }\n  \n  .nav-buttons {\n    display: flex;\n    gap: 1rem;\n  }\n  \n  .nav-button {\n    padding: 0.5rem 1rem;\n    border: none;\n    background: none;\n    color: #4b5563;\n    font-weight: 500;\n    transition: color 0.2s ease;\n  }\n  \n  .nav-right {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n  \n  .nav-button:hover, .user-menu:hover, .title-link:hover h2 {\n    color: #61d49e;\n  }\n  \n  .user-menu {\n    padding: 0.5rem;\n    border: none;\n    background: none;\n    color: #4b5563;\n    cursor: pointer;\n    transition: color 0.2s ease;\n    display: flex;\n    align-items: center;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Booklink                                                                                                                                        Home                                                                        Dashboard                        Database                                                                                                                        Login                Register                                                                                                                                                            {{ userEmail || \\'Anonymous User\\' }}                                                                                                                                        View Profile                                                                            Sign out                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageComponent.html":{"url":"components/PageComponent.html","title":"component - PageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/stories/page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./page.css\n            \n\n\n            \n                template\n                  \n  \n    Pages in Storybook\n    \n      We recommend building UIs with a\n      \n        component-driven\n      \n      process starting with atomic components and ending with pages.\n    \n    \n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    \n    \n      \n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      \n      \n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      \n    \n    \n      Get a guided tutorial on component-driven development at\n      \n        Storybook tutorials\n      \n      . Read more in the\n       docs \n      .\n    \n    \n      Tip Adjust the width of the canvas with the\n      \n        \n          \n        \n      \n      Viewports addon in the toolbar\n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doCreateAccount\n                            \n                            \n                                doLogin\n                            \n                            \n                                doLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doCreateAccount\n                        \n                    \n                \n            \n            \n                \ndoCreateAccount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stories/page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogin\n                        \n                    \n                \n            \n            \n                \ndoLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stories/page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogout\n                        \n                    \n                \n            \n            \n                \ndoLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stories/page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/stories/page.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `\n  \n  \n    Pages in Storybook\n    \n      We recommend building UIs with a\n      \n        component-driven\n      \n      process starting with atomic components and ending with pages.\n    \n    \n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    \n    \n      \n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      \n      \n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      \n    \n    \n      Get a guided tutorial on component-driven development at\n      \n        Storybook tutorials\n      \n      . Read more in the\n       docs \n      .\n    \n    \n      Tip Adjust the width of the canvas with the\n      \n        \n          \n        \n      \n      Viewports addon in the toolbar\n    \n  \n`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n\n    \n\n\n    \n                \n                    ./page.css\n                \n                .storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Pages in Storybook          We recommend building UIs with a              component-driven            process starting with atomic components and ending with pages.              Render pages with mock data. This makes it easy to build and review page states without      needing to navigate to them in your app. Here are some handy patterns for managing page data      in Storybook:                      Use a higher-level connected component. Storybook helps you compose such data from the        \"args\" of child component stories                    Assemble data in the page component from your services. You can mock these services out        using Storybook.                    Get a guided tutorial on component-driven development at              Storybook tutorials            . Read more in the       docs       .              Tip Adjust the width of the canvas with the                                            Viewports addon in the toolbar      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            RouterLinkActive\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5267/v1/api/auth/register'\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, RouterLinkActive, HttpClientModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent {\n  email: string = '';\n  password: string = '';\n  confirmPassword: string = '';\n  apiUrl: string = 'http://localhost:5267/v1/api/auth/register';\n\n  constructor(private router: Router, private http: HttpClient) {}\n  \n    navigateTo(path: string): void {\n      if (this.router.url !== path) {\n        this.router.navigate([path]);\n      }\n    }\n    register() {\n      if (this.password !== this.confirmPassword) {\n        alert('Passwords do not match!');\n        return;\n      }\n  \n      const userData = { email: this.email, password: this.password };\n  \n      this.http.post(this.apiUrl, userData).subscribe(\n        (response) => {\n          console.log('Registration successful', response);\n          alert('Registration successful!');\n          this.router.navigate(['/login']); // Redirect to login page\n        },\n        (error) => {\n          console.error('Registration failed', error);\n          alert('Registration failed! Try again.');\n        }\n      );\n    }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Booklink\n      \n    \n    \n    Create new account\n  \n\n  \n  \n    \n      \n      \n      \n        Email address\n        \n          \n        \n      \n\n      \n      \n        \n          Password\n        \n        \n          \n        \n\n        \n        \n          Confirm password\n        \n        \n          \n        \n      \n\n      \n      \n        \n          Sign up\n        \n      \n    \n\n    \n    \n      Already have an account?\n      \n        Sign in here!\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Booklink                  Create new account                                    Email address                                                              Password                                                            Confirm password                                                                      Sign up                                Already have an account?              Sign in here!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                newPassword\n                            \n                            \n                                success\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/reset-password/reset-password.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.css'\n})\n\n\nexport class ResetPasswordComponent {\n  email: string = '';\n  token: string = '';\n  newPassword: string = '';\n  confirmPassword: string = '';\n  success = false;\n\n  constructor(private route: ActivatedRoute, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.email = this.route.snapshot.queryParamMap.get('email') || '';\n    this.token = this.route.snapshot.queryParamMap.get('token') || '';\n  }\n\n  resetPassword(): void {\n    if (this.newPassword !== this.confirmPassword) {\n      alert('Passwords do not match.');\n      return;\n    }\n\n    this.authService.resetPassword({\n      email: this.email,\n      token: this.token,\n      newPassword: this.newPassword\n    }).subscribe({\n      next: () => this.success = true,\n      error: err => alert(err.error.message || 'Password reset failed.')\n    });\n\n    if (this.success = true) {\n      setTimeout(() => {\n        this.router.navigate([\"/login\"])\n    }, 3000);\n    }\n  }\n}\n\n    \n\n    \n        \n    Set a New Password\n  \n    \n      \n        New Password\n        \n      \n  \n      \n        Confirm Password\n        \n      \n  \n      \n        Reset Password\n      \n    \n  \n    Password reset successful! You will be redirected to login page shortly.\n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Set a New Password                    New Password                              Confirm Password                              Reset Password                Password reset successful! You will be redirected to login page shortly.    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequest.html":{"url":"interfaces/ResetPasswordRequest.html","title":"interface - ResetPasswordRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n// Interfaces for password reset requests\nexport interface ForgotPasswordRequest {\n  email: string;\n}\n\nexport interface ResetPasswordRequest {\n  email: string;\n  token: string;\n  newPassword: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  // base auth url\n  private apiUrl = 'http://localhost:5267/v1/api/auth';\n\n  private jwtHelper = new JwtHelperService();\n\n  private userEmailSubject = new BehaviorSubject(\n    localStorage.getItem('userEmail')\n  );\n  userEmail$ = this.userEmailSubject.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // Send password reset request to backend\n  requestPasswordReset(request: ForgotPasswordRequest): Observable {\n    return this.http.post(`${this.apiUrl}/forgot-password`, request);\n  }\n\n  // backend call\n  resetPassword(data: ResetPasswordRequest) {\n    return this.http.post(`${this.apiUrl}/reset-password`, data);\n  }\n\n  login(email: string, password: string): Observable {\n    return this.http.post(`${this.apiUrl}/login`, { email, password }).pipe(\n      tap(response => {\n        // Store JWT in localStorage\n        console.log('Received token:', response.token);\n        localStorage.setItem('authToken', response.token);\n\n        // Store user email for later use\n        console.log('Saved userEmail:', email);\n        localStorage.setItem('userEmail', email);\n\n        this.userEmailSubject.next(email);\n      }),\n      // Handle error responses from backend\n      catchError(error => {\n        console.error('Error from backend:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  getUserId(): string | null {\n    const token = localStorage.getItem('authToken');\n    if (!token) return null;\n\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    return decodedToken?.sub || null;\n  }\n\n  // Clear auth data and redirect to home page\n  logout(): void {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    this.userEmailSubject.next(null);\n    this.router.navigateByUrl('/home');\n  }\n\n  getUserEmail(): string | null {\n    return this.userEmailSubject.value;\n  }\n\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('authToken');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Room.html":{"url":"interfaces/Room.html","title":"interface - Room","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Room\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            householdId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        householdId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        householdId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateBookRequest.html":{"url":"interfaces/UpdateBookRequest.html","title":"interface - UpdateBookRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateBookRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            bookshelfId\n                                        \n                                \n                                \n                                        \n                                            columnsFromLeft\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            householdId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isbn\n                                        \n                                \n                                \n                                        \n                                            isInReadingList\n                                        \n                                \n                                \n                                        \n                                            publicationYear\n                                        \n                                \n                                \n                                        \n                                            roomId\n                                        \n                                \n                                \n                                        \n                                            rowsFromTop\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bookshelfId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookshelfId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnsFromLeft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnsFromLeft:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        householdId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        householdId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isbn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isbn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isInReadingList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isInReadingList:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicationYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publicationYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowsFromTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowsFromTop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateBookshelfRequest.html":{"url":"interfaces/UpdateBookshelfRequest.html","title":"interface - UpdateBookshelfRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateBookshelfRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfColumns\n                                        \n                                \n                                \n                                        \n                                            numberOfRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfColumns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfColumns:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateEntityRequest.html":{"url":"interfaces/UpdateEntityRequest.html","title":"interface - UpdateEntityRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateEntityRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database-service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Household {\n    id: string;\n    userId: string;\n    name: string;\n}\n\nexport interface Room {\n    id: string;\n    userId: string;\n    name: string;\n    householdId: string;\n}\n\nexport interface Bookshelf {\n    id: string;\n    userId: string;\n    name: string;\n    numberOfRows: number;\n    numberOfColumns: number;\n    roomId: number;\n}\n\nexport interface Book {\n    id: string;\n    userId: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookRequest {\n    id: string;\n    title: string;\n    author: string;\n    genre: string;\n    isbn: string;\n    publicationYear: number;\n    isInReadingList: boolean;\n    columnsFromLeft: number;\n    rowsFromTop: number;\n    householdId: string;\n    roomId: string;\n    bookshelfId: string;\n}\n\nexport interface UpdateBookshelfRequest {\n    id: string;\n    name: string;\n    description: string;\n    numberOfColumns: number;\n    numberOfRows: number;\n}\n\nexport interface UpdateEntityRequest {\n    id: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatabaseService {\n    private apiUrl = 'http://localhost:5267/v1/api';\n\n    constructor(private http: HttpClient) { }\n\n    // household endpoints\n    getHouseholdsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/households/user:${userId}`);\n    }\n\n    createHousehold(household: { userId: string, name: string }): Observable {\n        return this.http.post(`${this.apiUrl}/households`, household);\n    }\n\n    updateHousehold(id: string, household: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/households/${id}`, household);\n    }\n\n    deleteHousehold(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/households/${id}`);\n    }\n\n\n    // room endpoints\n    getAllRoomsByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/user:${userId}`)\n    }\n\n    getRoomsByHouseholdId(householdId: string): Observable {\n        return this.http.get(`${this.apiUrl}/rooms/householdId:${householdId}`);\n    }\n\n    createRoom(room: { name: string; householdId: string }): Observable {\n        return this.http.post(`${this.apiUrl}/rooms`, room);\n    }\n\n    updateRoom(id: string, room: UpdateEntityRequest): Observable {\n        return this.http.put(`${this.apiUrl}/rooms/${id}`, room);\n    }\n\n    deleteRoom(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/rooms/${id}`);\n    }\n\n\n    // bookshelf endopoints\n    getBookshelfById(bookshelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/bookshelf/${bookshelfId}`)\n    }\n\n    getAllBookshelvesByUserId(userId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/user:${userId}`)\n    }\n\n    getBookshelvesByRoom(roomId: string): Observable {\n        return this.http.get(`${this.apiUrl}/bookshelves/${roomId}`);\n    }\n\n    createBookshelf(bookshelf: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/bookshelves`, bookshelf);\n    }\n\n    updateBookshelf(id: string, bookshelf: UpdateBookshelfRequest) {\n        return this.http.put(`${this.apiUrl}/bookshelves/${id}`, bookshelf);\n    }\n\n    deleteBookshelf(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/bookshelves/${id}`);\n    }\n\n\n    // book endpoints\n    getAllBooks(id: string): Observable {\n        console.log(\"Books fetched\")\n        return this.http.get(`${this.apiUrl}/Books/${id}`);\n    }\n\n    getBooksByShelf(shelfId: string): Observable {\n        return this.http.get(`${this.apiUrl}/books/bookshelf:${shelfId}`);\n    }\n\n    createBook(book: Partial): Observable {\n        return this.http.post(`${this.apiUrl}/books`, book);\n    }\n\n    updateBook(id: string, book: UpdateBookRequest): Observable {\n        return this.http.put(`${this.apiUrl}/books/${id}`, book);\n    }\n\n    deleteBook(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/books/${id}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-profile.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                readingListBooks\n                            \n                            \n                                totalBooks\n                            \n                            \n                                userData\n                            \n                            \n                                userEmail\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        readingListBooks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalBooks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        name: '',\n        email: '',\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Book, DatabaseService } from '../services/database-service';\nimport { AuthService } from '../services/auth.service';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-user-profile',\n    standalone: true,\n    imports: [FormsModule, CommonModule],\n    templateUrl: './user-profile.component.html',\n    styleUrl: './user-profile.component.css'\n})\nexport class UserProfileComponent {\n    userEmail: string | null = '';\n    userId: string | null = '';\n    totalBooks: number = 0;\n    readingListBooks: number = 0;\n\n    userData = {\n        name: '',\n        email: '',\n    };\n\n    constructor(private dbService: DatabaseService, private authService: AuthService) { }\n\n    ngOnInit(): void {\n        this.userId = this.authService.getUserId();\n        this.userEmail = this.authService.getUserEmail();\n        this.userData.email = this.userEmail || '';\n\n        if (this.userId) {\n            this.dbService.getAllBooks(this.userId).subscribe((books: Book[]) => {\n                const userBooks = books.filter(b => b.userId === this.userId);\n                this.totalBooks = userBooks.length;\n                this.readingListBooks = userBooks.filter(b => b.isInReadingList).length;\n            });\n        }\n\n        this.userData.name = 'Anonymous User';\n    }\n}\n\n    \n\n    \n        \n    {{ userData.email }}\n    Stats\n\n    \n        \n            {{ totalBooks }}\n            Total Books\n        \n        \n            {{ readingListBooks }}\n            In Reading List\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ userData.email }}    Stats                        {{ totalBooks }}            Total Books                            {{ readingListBooks }}            In Reading List            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateTokenComponent.html":{"url":"components/ValidateTokenComponent.html","title":"component - ValidateTokenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ValidateTokenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/validate-token/validate-token.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validate-token\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./validate-token.component.html\n            \n\n\n\n            \n                styleUrl\n                ./validate-token.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                isSuccess\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/validate-token/validate-token.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/validate-token/validate-token.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail(email: string, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/validate-token/validate-token.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5267/v1/api/auth/validate-token'\n                    \n                \n                    \n                        \n                                Defined in src/app/validate-token/validate-token.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/validate-token/validate-token.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Verifying your email...'\n                    \n                \n                    \n                        \n                                Defined in src/app/validate-token/validate-token.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-validate-token',\n    standalone: true,\n    imports: [CommonModule],\n    templateUrl: './validate-token.component.html',\n    styleUrl: './validate-token.component.css'\n})\nexport class ValidateTokenComponent {\n    message: string = 'Verifying your email...';\n    isSuccess: boolean = false;\n\n    private apiUrl = 'http://localhost:5267/v1/api/auth/validate-token';\n\n    constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router) { }\n\n    ngOnInit(): void {\n        this.route.queryParams.subscribe(params => {\n            const email = params['email'];\n            const token = params['token'];\n\n            if (token && email) {\n                this.verifyEmail(email, token);\n            } else {\n                this.message = 'Invalid confirmation link.';\n            }\n        });\n    }\n\n    verifyEmail(email: string, token: string): void {\n        const session = {\n            email: email,\n            sessionToken: token\n          };\n\n        this.http.post(this.apiUrl, session).subscribe({\n            next: () => {\n                this.message = 'Your email has been successfully verified! Redirecting to login page...';\n                this.isSuccess = true;\n                setTimeout(() => this.router.navigate(['/login']), 3000);\n            },\n            error: () => {\n                this.message = 'Email verification failed. The link may be expired or invalid.';\n                this.isSuccess = false;\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n    \n      \n        {{ message }}\n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ message }}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatabaseComponent', 'selector': 'app-real-estate'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavBarComponent', 'selector': 'nav-bar'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ValidateTokenComponent', 'selector': 'app-validate-token'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateTokenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                13 %\n                (4/30)\n            \n        \n        \n            \n                \n                src/app/database/database.component.ts\n            \n            component\n            DatabaseComponent\n            \n                5 %\n                (3/55)\n            \n        \n        \n            \n                \n                src/app/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            ForgotPasswordRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            ResetPasswordRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            Book\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            Bookshelf\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            Household\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            Room\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            UpdateBookRequest\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            UpdateBookshelfRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/database-service.ts\n            \n            interface\n            UpdateEntityRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/validate-token/validate-token.component.ts\n            \n            component\n            ValidateTokenComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/stories/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Large\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Secondary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Small\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stories/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            variable\n            LoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            variable\n            LoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stories/page.component.ts\n            \n            component\n            PageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            variable\n            LoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            variable\n            LoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stories/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @auth0/angular-jwt : ^5.2.0\n        \n            @tailwindcss/forms : ^0.5.10\n        \n            angular-jwt : ^0.1.11\n        \n            db-knih-api : github:ROGR3/db-knih-api\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBooklinkFE\nThis project was generated with Angular CLI version 18.2.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Story   (src/.../button.stories.ts)\n                        \n                        \n                            Story   (src/.../header.stories.ts)\n                        \n                        \n                            Story   (src/.../page.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stories/button.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    src/stories/header.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    src/stories/page.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            Large   (src/.../button.stories.ts)\n                        \n                        \n                            LoggedIn   (src/.../header.stories.ts)\n                        \n                        \n                            LoggedIn   (src/.../page.stories.ts)\n                        \n                        \n                            LoggedOut   (src/.../header.stories.ts)\n                        \n                        \n                            LoggedOut   (src/.../page.stories.ts)\n                        \n                        \n                            meta   (src/.../button.stories.ts)\n                        \n                        \n                            meta   (src/.../header.stories.ts)\n                        \n                        \n                            meta   (src/.../page.stories.ts)\n                        \n                        \n                            Primary   (src/.../button.stories.ts)\n                        \n                        \n                            Secondary   (src/.../button.stories.ts)\n                        \n                        \n                            Small   (src/.../button.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/button.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Secondary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Small\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/header.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/page.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
